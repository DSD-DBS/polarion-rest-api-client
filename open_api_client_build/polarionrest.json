{
  "components": {
    "schemas": {
      "branchDocumentRequestBody": {
        "properties": {
          "copyWorkflowStatusAndSignatures": {
            "description": "Specifies that workflow status and signatures should be copied to the branched document.",
            "example": false,
            "type": "boolean"
          },
          "query": {
            "description": "Specifies optional filtering query.",
            "example": "status:open",
            "type": "string"
          },
          "targetDocumentName": {
            "description": "Name for new Document.",
            "example": "MyDocumentId",
            "type": "string"
          },
          "targetProjectId": {
            "description": "Project where new document will be created.",
            "example": "MyProjectId",
            "type": "string"
          },
          "targetSpaceId": {
            "description": "Space where new document will be created.",
            "example": "MySpaceId",
            "type": "string"
          }
        },
        "type": "object"
      },
      "branchDocumentsRequestBody": {
        "properties": {
          "documentConfigurations": {
            "items": {
              "properties": {
                "copyWorkflowStatusAndSignatures": {
                  "description": "Specifies that workflow status and signatures should be copied to the branched document.",
                  "example": false,
                  "type": "boolean"
                },
                "initializedFields": {
                  "description": "Specifies fields of overwritten Work Items that should be initialized (instead of being copied from source Work Items).",
                  "items": {
                    "example": "severity",
                    "type": "string"
                  },
                  "type": "array"
                },
                "overwriteWorkItems": {
                  "description": "Specifies that Work Items in the branched Document should be overwritten (instead of being referenced).",
                  "example": false,
                  "type": "boolean"
                },
                "query": {
                  "description": "Specifies optional filtering query.",
                  "example": "status:open",
                  "type": "string"
                },
                "sourceDocument": {
                  "description": "Reference path of the source Document.",
                  "example": "MyProjectId/MySpaceId/MyDocumentId",
                  "type": "string"
                },
                "sourceRevision": {
                  "description": "Revision of the source Document.",
                  "example": "1234",
                  "type": "string"
                },
                "targetDocumentName": {
                  "description": "Name for new Document.",
                  "example": "MyDocumentId",
                  "type": "string"
                },
                "targetDocumentTitle": {
                  "description": "Title for new Document.",
                  "example": "My Document Title",
                  "type": "string"
                },
                "targetProjectId": {
                  "description": "Project where new document will be created.",
                  "example": "MyProjectId",
                  "type": "string"
                },
                "targetSpaceId": {
                  "description": "Space where new document will be created.",
                  "example": "MySpaceId",
                  "type": "string"
                },
                "updateTitleHeading": {
                  "description": "Specifies that title heading of the target Document should be set to the new Document's title.",
                  "example": false,
                  "type": "boolean"
                }
              },
              "required": [
                "sourceDocument"
              ],
              "type": "object"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "documentConfigurations"
        ],
        "type": "object"
      },
      "collectionsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "collections"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyCollectionId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "collectionsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "collections"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyCollectionId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "closedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "example": "ID",
                      "type": "string"
                    },
                    "name": {
                      "example": "Name",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "documents": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MySpaceId/MyDocumentId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "documents"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "downstreamCollections": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyCollectionId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "collections"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "reusedFrom": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyCollectionId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "collections"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "upstreamCollections": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyCollectionId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "collections"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/collection?id=MyCollectionId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/collections/MyCollectionId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/collections?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/collections?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/collections?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "portal": {
                "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/collections",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/collections?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/collections?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "collectionsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "collections"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "example": "ID",
                      "type": "string"
                    },
                    "name": {
                      "example": "Name",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "documents": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MySpaceId/MyDocumentId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "documents"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "upstreamCollections": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyCollectionId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "collections"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "collectionsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "collections"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyCollectionId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/collection?id=MyCollectionId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/collections/MyCollectionId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "collectionsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "collections"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyCollectionId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "closedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "example": "ID",
                    "type": "string"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "downstreamCollections": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyCollectionId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "collections"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "reusedFrom": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyCollectionId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "collections"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "upstreamCollections": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyCollectionId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "collections"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "portal": {
                    "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/collection?id=MyCollectionId&revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/collections/MyCollectionId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/collections/MyCollectionId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "collectionsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "collections"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyCollectionId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "documents": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "upstreamCollections": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyCollectionId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "collections"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "copyDocumentRequestBody": {
        "properties": {
          "linkOriginalItemsWithRole": {
            "description": "Link a copy of the document to the original.",
            "example": "duplicates",
            "type": "string"
          },
          "removeOutgoingLinks": {
            "description": "Should outgoing links be removed?",
            "example": true,
            "type": "boolean"
          },
          "targetDocumentName": {
            "description": "Name for new Document.",
            "example": "MyDocumentId",
            "type": "string"
          },
          "targetProjectId": {
            "description": "Project where new document will be created.",
            "example": "MyProjectId",
            "type": "string"
          },
          "targetSpaceId": {
            "description": "Space where new document will be created.",
            "example": "MySpaceId",
            "type": "string"
          }
        },
        "type": "object"
      },
      "createProjectRequestBody": {
        "properties": {
          "location": {
            "description": "Location of the new Project to be created.",
            "example": "MyLocation",
            "nullable": false,
            "type": "string"
          },
          "params": {
            "description": "params of new Project to be created.",
            "nullable": true,
            "type": "object"
          },
          "projectId": {
            "description": "Id of the new Project to be created.",
            "example": "MyProjectId",
            "nullable": false,
            "type": "string"
          },
          "templateId": {
            "description": "Id of the template to create the new Project from.",
            "example": "MyProjectTemplateId",
            "nullable": true,
            "type": "string"
          },
          "trackerPrefix": {
            "description": "Tracker prefix of the new Project to be created.",
            "example": "MyTrackerPrefix",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "document_attachmentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyDocumentId/MyAttachmentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyAttachmentId",
                      "type": "string"
                    },
                    "length": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments/MyAttachmentId/content?revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments/MyAttachmentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "document_attachmentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_attachments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "document_attachmentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyDocumentId/MyAttachmentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments/MyAttachmentId/content?revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments/MyAttachmentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "document_attachmentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "document_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId/MyAttachmentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "fileName": {
                    "example": "File Name",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyAttachmentId",
                    "type": "string"
                  },
                  "length": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "content": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments/MyAttachmentId/content?revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments/MyAttachmentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments/MyAttachmentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "document_attachmentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "document_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId/MyAttachmentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "document_commentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_comments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyCommentId",
                      "type": "string"
                    },
                    "resolved": {
                      "type": "boolean"
                    },
                    "text": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "childComments": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "document_comments"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "parentComment": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments/MyCommentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "document_commentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_comments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "resolved": {
                      "type": "boolean"
                    },
                    "text": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "parentComment": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "document_commentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_comments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments/MyCommentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "document_commentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "document_comments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyCommentId",
                    "type": "string"
                  },
                  "resolved": {
                    "type": "boolean"
                  },
                  "text": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "childComments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parentComment": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "document_comments"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments/MyCommentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments/MyCommentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "document_commentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "document_comments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "resolved": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "document_partsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_parts"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "content": {
                      "example": "<div id=\"polarion_wiki macro name=module-workitem;params=id=workitem_MyWorkItemId\"></div>",
                      "type": "string"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "id": {
                      "example": "workitem_MyWorkItemId",
                      "type": "string"
                    },
                    "level": {
                      "example": 0,
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": {
                      "example": "workitem",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "nextPart": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_parts"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "previousPart": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_parts"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "workItem": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts/workitem_MyWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "document_partsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_parts"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "level": {
                      "example": 0,
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": {
                      "example": "workitem",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "nextPart": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_parts"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "previousPart": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_parts"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "workItem": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "document_partsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "document_parts"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts/workitem_MyWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "document_partsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "document_parts"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "content": {
                    "example": "<div id=\"polarion_wiki macro name=module-workitem;params=id=workitem_MyWorkItemId\"></div>",
                    "type": "string"
                  },
                  "external": {
                    "type": "boolean"
                  },
                  "id": {
                    "example": "workitem_MyWorkItemId",
                    "type": "string"
                  },
                  "level": {
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": {
                    "example": "workitem",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "nextPart": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "document_parts"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "previousPart": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "document_parts"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "workItem": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts/workitem_MyWorkItemId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/parts/workitem_MyWorkItemId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "documentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "documents"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "autoSuspect": {
                      "type": "boolean"
                    },
                    "homePageContent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "moduleName": {
                      "example": "MyDocumentId",
                      "type": "string"
                    },
                    "outlineNumbering": {
                      "properties": {
                        "prefix": {
                          "example": "ABC",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "renderingLayouts": {
                      "items": {
                        "properties": {
                          "label": {
                            "example": "My label",
                            "type": "string"
                          },
                          "layouter": {
                            "example": "paragraph",
                            "type": "string"
                          },
                          "properties": {
                            "items": {
                              "properties": {
                                "key": {
                                  "example": "fieldsAtStart",
                                  "type": "string"
                                },
                                "value": {
                                  "example": "id",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "type": {
                            "example": "task",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "example": "draft",
                      "type": "string"
                    },
                    "structureLinkRole": {
                      "example": "relates_to",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "type": {
                      "example": "req_specification",
                      "type": "string"
                    },
                    "usesOutlineNumbering": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "documentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "documents"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyDocumentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "documentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "documents"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "autoSuspect": {
                    "type": "boolean"
                  },
                  "branchedWithInitializedFields": {
                    "items": {
                      "example": "fieldId",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "branchedWithQuery": {
                    "example": "Branched with Query",
                    "type": "string"
                  },
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "derivedFields": {
                    "items": {
                      "example": "fieldId",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "derivedFromLinkRole": {
                    "example": "relates_to",
                    "type": "string"
                  },
                  "homePageContent": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "moduleFolder": {
                    "example": "MySpaceId",
                    "type": "string"
                  },
                  "moduleName": {
                    "example": "MyDocumentId",
                    "type": "string"
                  },
                  "outlineNumbering": {
                    "properties": {
                      "prefix": {
                        "example": "ABC",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "renderingLayouts": {
                    "items": {
                      "properties": {
                        "label": {
                          "example": "My label",
                          "type": "string"
                        },
                        "layouter": {
                          "example": "paragraph",
                          "type": "string"
                        },
                        "properties": {
                          "items": {
                            "properties": {
                              "key": {
                                "example": "fieldsAtStart",
                                "type": "string"
                              },
                              "value": {
                                "example": "id",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "example": "task",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "status": {
                    "example": "draft",
                    "type": "string"
                  },
                  "structureLinkRole": {
                    "example": "relates_to",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "type": {
                    "example": "req_specification",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "usesOutlineNumbering": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "attachments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/MyAttachmentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_attachments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments?revision=1234",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "branchedFrom": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "comments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments?revision=1234",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "derivedFrom": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "variant": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "documentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "documents"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "autoSuspect": {
                    "type": "boolean"
                  },
                  "homePageContent": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "outlineNumbering": {
                    "properties": {
                      "prefix": {
                        "example": "ABC",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "renderingLayouts": {
                    "items": {
                      "properties": {
                        "label": {
                          "example": "My label",
                          "type": "string"
                        },
                        "layouter": {
                          "example": "paragraph",
                          "type": "string"
                        },
                        "properties": {
                          "items": {
                            "properties": {
                              "key": {
                                "example": "fieldsAtStart",
                                "type": "string"
                              },
                              "value": {
                                "example": "id",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "example": "task",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "status": {
                    "example": "draft",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "type": {
                    "example": "req_specification",
                    "type": "string"
                  },
                  "usesOutlineNumbering": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "documentsSinglePostResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "documents"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyDocumentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "autoSuspect": {
                    "type": "boolean"
                  },
                  "branchedWithInitializedFields": {
                    "items": {
                      "example": "fieldId",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "branchedWithQuery": {
                    "example": "Branched with Query",
                    "type": "string"
                  },
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "derivedFields": {
                    "items": {
                      "example": "fieldId",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "derivedFromLinkRole": {
                    "example": "relates_to",
                    "type": "string"
                  },
                  "homePageContent": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "moduleFolder": {
                    "example": "MySpaceId",
                    "type": "string"
                  },
                  "outlineNumbering": {
                    "properties": {
                      "prefix": {
                        "example": "ABC",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "renderingLayouts": {
                    "items": {
                      "properties": {
                        "label": {
                          "example": "My label",
                          "type": "string"
                        },
                        "layouter": {
                          "example": "paragraph",
                          "type": "string"
                        },
                        "properties": {
                          "items": {
                            "properties": {
                              "key": {
                                "example": "fieldsAtStart",
                                "type": "string"
                              },
                              "value": {
                                "example": "id",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "example": "task",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "status": {
                    "example": "draft",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "type": {
                    "example": "req_specification",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "usesOutlineNumbering": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "attachments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/MyAttachmentId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_attachments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/attachments?revision=1234",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "branchedFrom": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "comments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId/MyCommentId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "document_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId/comments?revision=1234",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "derivedFrom": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "variant": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/documents/MyDocumentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "enumerationsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "enumerations"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "enumContext": {
                      "example": "id",
                      "type": "string"
                    },
                    "enumName": {
                      "example": "id",
                      "type": "string"
                    },
                    "options": {
                      "items": {
                        "properties": {
                          "color": {
                            "example": "#F9FF4D",
                            "type": "string"
                          },
                          "columnWidth": {
                            "example": "90%",
                            "type": "string"
                          },
                          "createDefect": {
                            "example": true,
                            "type": "boolean"
                          },
                          "default": {
                            "example": true,
                            "type": "boolean"
                          },
                          "description": {
                            "example": "Description",
                            "type": "string"
                          },
                          "hidden": {
                            "example": false,
                            "type": "boolean"
                          },
                          "iconURL": {
                            "example": "/polarion/icons/default/enums/status_open.gif",
                            "type": "string"
                          },
                          "id": {
                            "example": "open",
                            "type": "string"
                          },
                          "limited": {
                            "example": true,
                            "type": "boolean"
                          },
                          "minValue": {
                            "example": 30.0,
                            "type": "number"
                          },
                          "name": {
                            "example": "Open",
                            "type": "string"
                          },
                          "oppositeName": {
                            "example": "Opposite Name",
                            "type": "string"
                          },
                          "parent": {
                            "example": true,
                            "type": "boolean"
                          },
                          "requiresSignatureForTestCaseExecution": {
                            "example": true,
                            "type": "boolean"
                          },
                          "templateWorkItem": {
                            "example": "exampleTemplate",
                            "type": "string"
                          },
                          "terminal": {
                            "example": true,
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "targetType": {
                      "example": "id",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "enumerationsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "enumerations"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "~/status/~",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/enumerations/%7E/status/%7E",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "enumerationsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "enumerations"
                ],
                "type": "string"
              },
              "id": {
                "example": "~/status/~",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "enumContext": {
                    "example": "id",
                    "type": "string"
                  },
                  "enumName": {
                    "example": "id",
                    "type": "string"
                  },
                  "options": {
                    "items": {
                      "properties": {
                        "color": {
                          "example": "#F9FF4D",
                          "type": "string"
                        },
                        "columnWidth": {
                          "example": "90%",
                          "type": "string"
                        },
                        "createDefect": {
                          "example": true,
                          "type": "boolean"
                        },
                        "default": {
                          "example": true,
                          "type": "boolean"
                        },
                        "description": {
                          "example": "Description",
                          "type": "string"
                        },
                        "hidden": {
                          "example": false,
                          "type": "boolean"
                        },
                        "iconURL": {
                          "example": "/polarion/icons/default/enums/status_open.gif",
                          "type": "string"
                        },
                        "id": {
                          "example": "open",
                          "type": "string"
                        },
                        "limited": {
                          "example": true,
                          "type": "boolean"
                        },
                        "minValue": {
                          "example": 30.0,
                          "type": "number"
                        },
                        "name": {
                          "example": "Open",
                          "type": "string"
                        },
                        "oppositeName": {
                          "example": "Opposite Name",
                          "type": "string"
                        },
                        "parent": {
                          "example": true,
                          "type": "boolean"
                        },
                        "requiresSignatureForTestCaseExecution": {
                          "example": true,
                          "type": "boolean"
                        },
                        "templateWorkItem": {
                          "example": "exampleTemplate",
                          "type": "string"
                        },
                        "terminal": {
                          "example": true,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "targetType": {
                    "example": "id",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/enumerations/%7E/status/%7E",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/enumerations/%7E/status/%7E",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "enumerationsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "enumerations"
                ],
                "type": "string"
              },
              "id": {
                "example": "~/status/~",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "options": {
                    "items": {
                      "properties": {
                        "color": {
                          "example": "#F9FF4D",
                          "type": "string"
                        },
                        "columnWidth": {
                          "example": "90%",
                          "type": "string"
                        },
                        "createDefect": {
                          "example": true,
                          "type": "boolean"
                        },
                        "default": {
                          "example": true,
                          "type": "boolean"
                        },
                        "description": {
                          "example": "Description",
                          "type": "string"
                        },
                        "hidden": {
                          "example": false,
                          "type": "boolean"
                        },
                        "iconURL": {
                          "example": "/polarion/icons/default/enums/status_open.gif",
                          "type": "string"
                        },
                        "id": {
                          "example": "open",
                          "type": "string"
                        },
                        "limited": {
                          "example": true,
                          "type": "boolean"
                        },
                        "minValue": {
                          "example": 30.0,
                          "type": "number"
                        },
                        "name": {
                          "example": "Open",
                          "type": "string"
                        },
                        "oppositeName": {
                          "example": "Opposite Name",
                          "type": "string"
                        },
                        "parent": {
                          "example": true,
                          "type": "boolean"
                        },
                        "requiresSignatureForTestCaseExecution": {
                          "example": true,
                          "type": "boolean"
                        },
                        "templateWorkItem": {
                          "example": "exampleTemplate",
                          "type": "string"
                        },
                        "terminal": {
                          "example": true,
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "enumOptionsActionResponseBody": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "id": {
                  "example": "open",
                  "type": "string"
                },
                "color": {
                  "example": "#F9FF4D",
                  "type": "string"
                },
                "columnWidth": {
                  "example": "90%",
                  "type": "string"
                },
                "createDefect": {
                  "example": true,
                  "type": "boolean"
                },
                "default": {
                  "example": true,
                  "type": "boolean"
                },
                "description": {
                  "example": "Description",
                  "type": "string"
                },
                "hidden": {
                  "example": false,
                  "type": "boolean"
                },
                "iconURL": {
                  "example": "/polarion/icons/default/enums/status_open.gif",
                  "type": "string"
                },
                "limited": {
                  "example": true,
                  "type": "boolean"
                },
                "minValue": {
                  "example": 30.0,
                  "type": "number"
                },
                "name": {
                  "example": "Open",
                  "type": "string"
                },
                "oppositeName": {
                  "example": "Opposite Name",
                  "type": "string"
                },
                "parent": {
                  "example": true,
                  "type": "boolean"
                },
                "requiresSignatureForTestCaseExecution": {
                  "example": true,
                  "type": "boolean"
                },
                "templateWorkItem": {
                  "example": "exampleTemplate",
                  "type": "string"
                },
                "terminal": {
                  "example": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/.../fields/MyField/actions/actionName?page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/.../fields/MyField/actions/actionName?page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/.../fields/MyField/actions/actionName?page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/.../fields/MyField/actions/actionName?page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/.../fields/MyField/actions/actionName?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "errors": {
        "properties": {
          "errors": {
            "items": {
              "properties": {
                "status": {
                  "description": "HTTP status code applicable to this problem.",
                  "example": "400",
                  "type": "string"
                },
                "title": {
                  "description": "Short, human-readable summary of the problem.",
                  "example": "Bad Request",
                  "type": "string"
                },
                "detail": {
                  "description": "Human-readable explanation specific to this occurrence of the problem.",
                  "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                  "type": "string"
                },
                "source": {
                  "properties": {
                    "parameter": {
                      "description": "String indicating which URI query parameter caused the error.",
                      "example": "revision",
                      "type": "string"
                    },
                    "pointer": {
                      "description": "JSON Pointer to the associated entity in the request document.",
                      "example": "$.data",
                      "type": "string"
                    },
                    "resource": {
                      "description": "Resource causing the error.",
                      "properties": {
                        "id": {
                          "example": "MyProjectId/id",
                          "type": "string"
                        },
                        "type": {
                          "example": "type",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "exportTestCasesRequestBody": {
        "properties": {
          "query": {
            "example": "exportExcelQueryString",
            "type": "string"
          },
          "sortby": {
            "example": "exportExcelSortByString",
            "type": "string"
          },
          "template": {
            "example": "exportExcelTemplateName",
            "type": "string"
          }
        },
        "type": "object"
      },
      "externallylinkedworkitemsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "externallylinkedworkitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/parent/hostname/MyProjectId/MyLinkedWorkItemId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "externallylinkedworkitemsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "externallylinkedworkitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/parent/hostname/MyProjectId/MyLinkedWorkItemId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "role": {
                      "example": "relates_to",
                      "type": "string"
                    },
                    "workItemURI": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId/MyLinkedWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "externallylinkedworkitemsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "externallylinkedworkitems"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "role": {
                      "example": "relates_to",
                      "type": "string"
                    },
                    "workItemURI": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "externallylinkedworkitemsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "externallylinkedworkitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/parent/hostname/MyProjectId/MyLinkedWorkItemId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId/MyLinkedWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "externallylinkedworkitemsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "externallylinkedworkitems"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/parent/hostname/MyProjectId/MyLinkedWorkItemId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "role": {
                    "example": "relates_to",
                    "type": "string"
                  },
                  "workItemURI": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId/MyLinkedWorkItemId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/externallylinkedworkitems/parent/hostname/MyProjectId/MyLinkedWorkItemId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "featureselectionsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "featureselections"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/included/MyProjectId/MyWorkItemId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "selectionType": {
                      "enum": [
                        "excluded",
                        "included",
                        "implicitly-included"
                      ],
                      "example": "excluded",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "workItem": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId/MyWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "featureselectionsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "featureselections"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/included/MyProjectId/MyWorkItemId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "selectionType": {
                    "enum": [
                      "excluded",
                      "included",
                      "implicitly-included"
                    ],
                    "example": "excluded",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "workItem": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId/MyWorkItemId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/featureselections/included/MyProjectId/MyWorkItemId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "globalrolesSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "globalroles"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyRoleId",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "users": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/roles/MyRoleId",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/roles/MyRoleId",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "iconsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "icons"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "default/example.gif",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "iconUrl": {
                      "example": "pathexample",
                      "type": "string"
                    },
                    "id": {
                      "example": "pathexample",
                      "type": "string"
                    },
                    "path": {
                      "example": "pathexample",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/enumerations/defaulticons/example.gif",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/enumerations/defaulticons?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/enumerations/defaulticons?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/enumerations/defaulticons?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/enumerations/defaulticons?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/enumerations/defaulticons?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "iconsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "icons"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "iconsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "icons"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "default/example.gif",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/enumerations/defaulticons/example.gif",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "iconsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "icons"
                ],
                "type": "string"
              },
              "id": {
                "example": "default/example.gif",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "iconUrl": {
                    "example": "pathexample",
                    "type": "string"
                  },
                  "id": {
                    "example": "pathexample",
                    "type": "string"
                  },
                  "path": {
                    "example": "pathexample",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/enumerations/defaulticons/example.gif",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/enumerations/defaulticons/example.gif",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "importTestResultsRequestBody": {
        "properties": {
          "defectTemplateId": {
            "example": "MyProjectId/MyDefectId",
            "type": "string"
          },
          "retest": {
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "jobsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "jobs"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyJobId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "jobId": {
                    "example": "example",
                    "type": "string"
                  },
                  "name": {
                    "example": "example",
                    "type": "string"
                  },
                  "state": {
                    "example": "example",
                    "type": "string"
                  },
                  "status": {
                    "properties": {
                      "message": {
                        "example": "message",
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "OK",
                          "CANCELLED",
                          "FAILED",
                          "UNKNOWN"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "document": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "downloads": {
                    "example": [
                      "https://example.com/polarion/download/filename1",
                      "https://example.com/polarion/download/filename2"
                    ],
                    "type": "array"
                  },
                  "log": {
                    "example": "server-host-name/application-path/polarion/job-report?jobId=MyJobId",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/jobs/MyJobId",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/jobs/MyJobId",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "jobsSinglePostResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "jobs"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyJobId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "jobId": {
                    "example": "example",
                    "type": "string"
                  },
                  "name": {
                    "example": "example",
                    "type": "string"
                  },
                  "state": {
                    "example": "example",
                    "type": "string"
                  },
                  "status": {
                    "properties": {
                      "message": {
                        "example": "message",
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "OK",
                          "CANCELLED",
                          "FAILED",
                          "UNKNOWN"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "document": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "downloads": {
                    "example": [
                      "https://example.com/polarion/download/filename1",
                      "https://example.com/polarion/download/filename2"
                    ],
                    "type": "array"
                  },
                  "log": {
                    "example": "server-host-name/application-path/polarion/job-report?jobId=MyJobId",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/jobs/MyJobId",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "linkedoslcresourcesListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedoslcresources"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/http://server-host-name/ns/cm#relatedChangeRequest/http://server-host-name/application-path/oslc/services/projects/MyProjectId/workitems/MyWorkItemId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "linkedoslcresourcesListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedoslcresources"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/http://server-host-name/ns/cm#relatedChangeRequest/http://server-host-name/application-path/oslc/services/projects/MyProjectId/workitems/MyWorkItemId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "label": {
                      "example": "Label",
                      "type": "string"
                    },
                    "role": {
                      "example": "http://open-services.net/ns/cm#relatedChangeRequest",
                      "type": "string"
                    },
                    "uri": {
                      "example": "Uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "linkedoslcresourcesListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedoslcresources"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "label": {
                      "example": "Label",
                      "type": "string"
                    },
                    "role": {
                      "example": "http://open-services.net/ns/cm#relatedChangeRequest",
                      "type": "string"
                    },
                    "uri": {
                      "example": "Uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "linkedoslcresourcesListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedoslcresources"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/http://server-host-name/ns/cm#relatedChangeRequest/http://server-host-name/application-path/oslc/services/projects/MyProjectId/workitems/MyWorkItemId",
                  "type": "string"
                },
                "links": {
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "linkedworkitemsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedworkitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "linkedworkitemsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedworkitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "revision": {
                      "example": "1234",
                      "type": "string"
                    },
                    "role": {
                      "example": "relates_to",
                      "type": "string"
                    },
                    "suspect": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "workItem": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId/MyLinkedWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "linkedworkitemsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedworkitems"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "revision": {
                      "example": "1234",
                      "type": "string"
                    },
                    "role": {
                      "example": "relates_to",
                      "type": "string"
                    },
                    "suspect": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "workItem": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "linkedworkitemsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "linkedworkitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId/MyLinkedWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "linkedworkitemsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "linkedworkitems"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "revision": {
                    "example": "1234",
                    "type": "string"
                  },
                  "role": {
                    "example": "relates_to",
                    "type": "string"
                  },
                  "suspect": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "workItem": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId/MyLinkedWorkItemId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems/parent/MyProjectId/MyLinkedWorkItemId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "linkedworkitemsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "linkedworkitems"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "revision": {
                    "example": "1234",
                    "type": "string"
                  },
                  "suspect": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "mergeDocumentRequestBody": {
        "properties": {
          "createBaseline": {
            "description": "Specifies whether the Baseline should be created.",
            "example": true,
            "type": "boolean"
          },
          "userFilter": {
            "description": "Specifies the query to filter the source Work Items for the merge.",
            "example": "status:open",
            "type": "string"
          }
        },
        "type": "object"
      },
      "moveProjectRequestBody": {
        "properties": {
          "location": {
            "description": "Location of the new Project to be created.",
            "example": "MyLocation",
            "nullable": false,
            "type": "string"
          }
        },
        "type": "object"
      },
      "moveWorkItemToDocumentRequestBody": {
        "properties": {
          "nextPart": {
            "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
            "type": "string"
          },
          "previousPart": {
            "example": "MyProjectId/MySpaceId/MyDocumentId/workitem_MyWorkItemId",
            "type": "string"
          },
          "targetDocument": {
            "example": "MyProjectId/MySpaceId/MyDocumentId",
            "type": "string"
          }
        },
        "type": "object"
      },
      "page_attachmentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "page_attachments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "page_attachmentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "page_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MySpaceId/MyRichPageId/MyAttachmentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/pages/MyRichPageId/attachments/MyAttachmentId/content?revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/pages/MyRichPageId/attachments/MyAttachmentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "page_attachmentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "page_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyRichPageId/MyAttachmentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "fileName": {
                    "example": "File Name",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyAttachmentId",
                    "type": "string"
                  },
                  "length": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "content": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/pages/MyRichPageId/attachments/MyAttachmentId/content?revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/pages/MyRichPageId/attachments/MyAttachmentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/pages/MyRichPageId/attachments/MyAttachmentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pagesSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "pages"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyRichPageId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "pageName": {
                    "example": "MyRichPageId",
                    "type": "string"
                  },
                  "spaceId": {
                    "example": "MySpaceId",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "attachments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyRichPageId/MyAttachmentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "page_attachments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/pages/MyRichPageId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/spaces/MySpaceId/pages/MyRichPageId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "pagesSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "pages"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MySpaceId/MyRichPageId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Pagination": {
        "properties": {
          "calculatedOffset": {
            "format": "int32",
            "type": "integer"
          },
          "pageNumber": {
            "format": "int32",
            "type": "integer"
          },
          "pageSize": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PatchDocumentAttachmentsRequestBody": {
        "properties": {
          "content": {
            "description": "attachments content",
            "format": "binary",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/document_attachmentsSinglePatchRequest"
          }
        },
        "required": [
          "resource"
        ],
        "title": "PatchDocumentAttachmentsRequestBody",
        "type": "object"
      },
      "PatchTestRecordAttachmentsRequestBody": {
        "properties": {
          "content": {
            "description": "attachments content",
            "format": "binary",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/testrecord_attachmentsSinglePatchRequest"
          }
        },
        "required": [
          "resource"
        ],
        "title": "PatchTestRecordAttachmentsRequestBody",
        "type": "object"
      },
      "PatchTestRunAttachmentsRequestBody": {
        "properties": {
          "content": {
            "description": "attachments content",
            "format": "binary",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/testrun_attachmentsSinglePatchRequest"
          }
        },
        "required": [
          "resource"
        ],
        "title": "PatchTestRunAttachmentsRequestBody",
        "type": "object"
      },
      "PatchTestStepResultAttachmentsRequestBody": {
        "properties": {
          "content": {
            "description": "attachments content",
            "format": "binary",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/teststepresult_attachmentsSinglePatchRequest"
          }
        },
        "required": [
          "resource"
        ],
        "title": "PatchTestStepResultAttachmentsRequestBody",
        "type": "object"
      },
      "PatchWorkItemAttachmentsRequestBody": {
        "properties": {
          "content": {
            "description": "attachments content",
            "format": "binary",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/workitem_attachmentsSinglePatchRequest"
          }
        },
        "required": [
          "resource"
        ],
        "title": "PatchWorkItemAttachmentsRequestBody",
        "type": "object"
      },
      "plansListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "plans"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyPlanId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "plansListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "plans"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyPlanId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "allowedTypes": {
                      "items": {
                        "example": "optionId",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "calculationType": {
                      "enum": [
                        "timeBased",
                        "customFieldBased"
                      ],
                      "example": "timeBased",
                      "type": "string"
                    },
                    "capacity": {
                      "type": "number"
                    },
                    "color": {
                      "example": "Color",
                      "type": "string"
                    },
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "defaultEstimate": {
                      "type": "number"
                    },
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "dueDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "estimationField": {
                      "example": "Estimation Field",
                      "type": "string"
                    },
                    "finishedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "homePageContent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "example": "ID",
                      "type": "string"
                    },
                    "isTemplate": {
                      "type": "boolean"
                    },
                    "name": {
                      "example": "Name",
                      "type": "string"
                    },
                    "previousTimeSpent": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "prioritizationField": {
                      "example": "Prioritization Field",
                      "type": "string"
                    },
                    "sortOrder": {
                      "example": 0,
                      "format": "int32",
                      "type": "integer"
                    },
                    "startDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "startedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "useReportFromTemplate": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "parent": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyPlanId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "plans"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "projectSpan": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "projects"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "template": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyPlanId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "plans"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "workItems": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "workitems"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/plan?id=MyPlanId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/plans/MyPlanId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/plans?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/plans?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/plans?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "portal": {
                "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/plans",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/plans?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/plans?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "plansListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "plans"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "allowedTypes": {
                      "items": {
                        "example": "optionId",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "calculationType": {
                      "enum": [
                        "timeBased",
                        "customFieldBased"
                      ],
                      "example": "timeBased",
                      "type": "string"
                    },
                    "capacity": {
                      "type": "number"
                    },
                    "color": {
                      "example": "Color",
                      "type": "string"
                    },
                    "defaultEstimate": {
                      "type": "number"
                    },
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "dueDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "estimationField": {
                      "example": "Estimation Field",
                      "type": "string"
                    },
                    "finishedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "homePageContent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "example": "ID",
                      "type": "string"
                    },
                    "isTemplate": {
                      "type": "boolean"
                    },
                    "name": {
                      "example": "Name",
                      "type": "string"
                    },
                    "previousTimeSpent": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "prioritizationField": {
                      "example": "Prioritization Field",
                      "type": "string"
                    },
                    "sortOrder": {
                      "example": 0,
                      "format": "int32",
                      "type": "integer"
                    },
                    "startDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "startedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "useReportFromTemplate": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "parent": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyPlanId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "plans"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "projectSpan": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "projects"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "template": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyPlanId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "plans"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "workItems": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "workitems"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "plansListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "plans"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyPlanId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/plan?id=MyPlanId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/plans/MyPlanId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "plansSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "plans"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyPlanId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "allowedTypes": {
                    "items": {
                      "example": "optionId",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "calculationType": {
                    "enum": [
                      "timeBased",
                      "customFieldBased"
                    ],
                    "example": "timeBased",
                    "type": "string"
                  },
                  "capacity": {
                    "type": "number"
                  },
                  "color": {
                    "example": "Color",
                    "type": "string"
                  },
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "defaultEstimate": {
                    "type": "number"
                  },
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "dueDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "estimationField": {
                    "example": "Estimation Field",
                    "type": "string"
                  },
                  "finishedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "homePageContent": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "example": "ID",
                    "type": "string"
                  },
                  "isTemplate": {
                    "type": "boolean"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  },
                  "previousTimeSpent": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "prioritizationField": {
                    "example": "Prioritization Field",
                    "type": "string"
                  },
                  "sortOrder": {
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                  },
                  "startDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "startedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "useReportFromTemplate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyPlanId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "plans"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "projectSpan": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "template": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyPlanId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "plans"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "workItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "portal": {
                    "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/plan?id=MyPlanId&revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/plans/MyPlanId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/plans/MyPlanId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "plansSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "plans"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyPlanId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "allowedTypes": {
                    "items": {
                      "example": "optionId",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "calculationType": {
                    "enum": [
                      "timeBased",
                      "customFieldBased"
                    ],
                    "example": "timeBased",
                    "type": "string"
                  },
                  "capacity": {
                    "type": "number"
                  },
                  "color": {
                    "example": "Color",
                    "type": "string"
                  },
                  "defaultEstimate": {
                    "type": "number"
                  },
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "dueDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "estimationField": {
                    "example": "Estimation Field",
                    "type": "string"
                  },
                  "finishedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "homePageContent": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "isTemplate": {
                    "type": "boolean"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  },
                  "previousTimeSpent": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "prioritizationField": {
                    "example": "Prioritization Field",
                    "type": "string"
                  },
                  "sortOrder": {
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                  },
                  "startDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "startedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "useReportFromTemplate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyPlanId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "plans"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "projectSpan": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "workItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PostDocumentAttachmentsRequestBody": {
        "properties": {
          "files": {
            "items": {
              "description": "attachments content",
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "resource": {
            "$ref": "#/components/schemas/document_attachmentsListPostRequest"
          }
        },
        "title": "PostDocumentAttachmentsRequestBody",
        "type": "object"
      },
      "PostIconsRequestBody": {
        "properties": {
          "files": {
            "items": {
              "description": "icons' content",
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "resource": {
            "$ref": "#/components/schemas/iconsListPostRequest"
          }
        },
        "title": "PostIconsRequestBody",
        "type": "object"
      },
      "PostImportActionRequestBody": {
        "properties": {
          "file": {
            "description": "excel file content",
            "format": "binary",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/importTestResultsRequestBody"
          }
        },
        "required": [
          "file"
        ],
        "title": "PostImportActionRequestBody",
        "type": "object"
      },
      "PostPageAttachmentsRequestBody": {
        "properties": {
          "files": {
            "items": {
              "description": "attachments content",
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "resource": {
            "$ref": "#/components/schemas/page_attachmentsListPostRequest"
          }
        },
        "title": "PostPageAttachmentsRequestBody",
        "type": "object"
      },
      "PostTestRecordAttachmentsRequestBody": {
        "properties": {
          "files": {
            "items": {
              "description": "attachments content",
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "resource": {
            "$ref": "#/components/schemas/testrecord_attachmentsListPostRequest"
          }
        },
        "title": "PostTestRecordAttachmentsRequestBody",
        "type": "object"
      },
      "PostTestRunAttachmentsRequestBody": {
        "properties": {
          "files": {
            "items": {
              "description": "attachments content",
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "resource": {
            "$ref": "#/components/schemas/testrun_attachmentsListPostRequest"
          }
        },
        "title": "PostTestRunAttachmentsRequestBody",
        "type": "object"
      },
      "PostTestStepResultAttachmentsRequestBody": {
        "properties": {
          "files": {
            "items": {
              "description": "attachments content",
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "resource": {
            "$ref": "#/components/schemas/teststepresult_attachmentsListPostRequest"
          }
        },
        "title": "PostTestStepResultAttachmentsRequestBody",
        "type": "object"
      },
      "PostWorkItemAttachmentsRequestBody": {
        "properties": {
          "files": {
            "items": {
              "description": "attachments content",
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "resource": {
            "$ref": "#/components/schemas/workitem_attachmentsListPostRequest"
          }
        },
        "title": "PostWorkItemAttachmentsRequestBody",
        "type": "object"
      },
      "projectsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "projects"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "color": {
                      "example": "Color",
                      "type": "string"
                    },
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "finish": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "icon": {
                      "example": "Icon",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyProjectId",
                      "type": "string"
                    },
                    "lockWorkRecordsDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "name": {
                      "example": "Name",
                      "type": "string"
                    },
                    "start": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "trackerPrefix": {
                      "example": "Tracker Prefix",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "lead": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "projectsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "projects"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "color": {
                    "example": "Color",
                    "type": "string"
                  },
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "finish": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "icon": {
                    "example": "Icon",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyProjectId",
                    "type": "string"
                  },
                  "lockWorkRecordsDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  },
                  "start": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "trackerPrefix": {
                    "example": "Tracker Prefix",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "lead": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "projectsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "projects"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "color": {
                    "example": "Color",
                    "type": "string"
                  },
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "finish": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "icon": {
                    "example": "Icon",
                    "type": "string"
                  },
                  "lockWorkRecordsDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  },
                  "start": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "trackerPrefix": {
                    "example": "Tracker Prefix",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "lead": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "projecttemplatesListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "projecttemplates"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "customIcon": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "distributions": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "id": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "parameters": {
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projecttemplates/MyProjectId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projecttemplates?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projecttemplates?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projecttemplates?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projecttemplates?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projecttemplates?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "RelationshipDataBody": {
        "properties": {
          "id": {
            "example": "MyProjectId/MyResourceId",
            "type": "string"
          },
          "type": {
            "enum": [
              "collections",
              "categories",
              "documents",
              "document_attachments",
              "document_comments",
              "document_parts",
              "enumerations",
              "globalroles",
              "icons",
              "jobs",
              "linkedworkitems",
              "externallylinkedworkitems",
              "linkedoslcresources",
              "pages",
              "page_attachments",
              "plans",
              "projectroles",
              "projectgroups",
              "projects",
              "projecttemplates",
              "spaces",
              "testparameters",
              "testparameter_definitions",
              "testrecords",
              "teststep_results",
              "testruns",
              "testrun_attachments",
              "teststepresult_attachments",
              "testrun_comments",
              "usergroups",
              "users",
              "workitems",
              "workitem_attachments",
              "workitem_approvals",
              "workitem_comments",
              "featureselections",
              "teststeps",
              "workrecords",
              "revisions",
              "testrecord_attachments"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelationshipDataListRequest": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/RelationshipDataBody"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelationshipDataListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/RelationshipDataBody"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelationshipDataSingleRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RelationshipDataBody"
          }
        },
        "type": "object"
      },
      "RelationshipDataSingleResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RelationshipDataBody"
          }
        },
        "type": "object"
      },
      "RelationshipResponseBody": {
        "description": "The Relationship's response body. Can return a single or a list of instances",
        "example": {
          "data": [
            {
              "type": "MyResourceType",
              "id": "MyProjectId/MyResourceId"
            }
          ]
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/RelationshipDataSingleResponse"
          },
          {
            "$ref": "#/components/schemas/RelationshipDataListResponse"
          }
        ],
        "type": "object"
      },
      "relationshipsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "collections",
                    "categories",
                    "documents",
                    "document_attachments",
                    "document_comments",
                    "document_parts",
                    "enumerations",
                    "globalroles",
                    "icons",
                    "jobs",
                    "linkedworkitems",
                    "externallylinkedworkitems",
                    "linkedoslcresources",
                    "pages",
                    "page_attachments",
                    "plans",
                    "projectroles",
                    "projectgroups",
                    "projects",
                    "projecttemplates",
                    "spaces",
                    "testparameters",
                    "testparameter_definitions",
                    "testrecords",
                    "teststep_results",
                    "testruns",
                    "testrun_attachments",
                    "teststepresult_attachments",
                    "testrun_comments",
                    "usergroups",
                    "users",
                    "workitems",
                    "workitem_attachments",
                    "workitem_approvals",
                    "workitem_comments",
                    "featureselections",
                    "teststeps",
                    "workrecords",
                    "revisions",
                    "testrecord_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyResourceId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelationshipsRequestBody": {
        "description": "List of generic contents",
        "example": {
          "data": [
            {
              "type": "MyResourceType",
              "id": "MyProjectId/MyResourceId"
            }
          ]
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/RelationshipDataSingleRequest"
          },
          {
            "$ref": "#/components/schemas/RelationshipDataListRequest"
          }
        ],
        "type": "object"
      },
      "RelationshipsRequestWithRevisionBody": {
        "description": "List of generic contents",
        "example": {
          "data": [
            {
              "type": "MyResourceType",
              "id": "MyProjectId/MyResourceId",
              "revision": "1234"
            }
          ]
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/RelationshipDataSingleRequest"
          },
          {
            "$ref": "#/components/schemas/RelationshipDataListRequest"
          }
        ],
        "type": "object"
      },
      "ResourceReference": {
        "properties": {
          "containedResource": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "revisionsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "revisions"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "default/1234",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "internalCommit": {
                      "type": "boolean"
                    },
                    "message": {
                      "example": "Message",
                      "type": "string"
                    },
                    "repositoryName": {
                      "example": "Repository name",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/revisions/default/1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/revisions/default?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/revisions/default?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/revisions/default?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/revisions/default?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/revisions/default?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "revisionsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "revisions"
                ],
                "type": "string"
              },
              "id": {
                "example": "default/1234",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "internalCommit": {
                    "type": "boolean"
                  },
                  "message": {
                    "example": "Message",
                    "type": "string"
                  },
                  "repositoryName": {
                    "example": "Repository name",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/revisions/default/1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/revisions/default/1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "setLicenseRequestBody": {
        "properties": {
          "concurrent": {
            "description": "Is concurrent user",
            "example": true,
            "type": "boolean"
          },
          "group": {
            "description": "License group",
            "example": "Department",
            "type": "string"
          },
          "license": {
            "description": "User's license type",
            "enum": [
              "REVIEWER",
              "XReviewer",
              "XBase",
              "XPro",
              "XEnterprise",
              "XPremium",
              "XAutomotive",
              "PRO",
              "REQUIREMENTS",
              "QA",
              "ALM"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "sparseFields": {
        "properties": {
          "categories": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "collections": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "document_attachments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "document_comments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "document_parts": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "documents": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "enumerations": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "externallylinkedworkitems": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "featureselections": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "globalroles": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "icons": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "jobs": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "linkedoslcresources": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "linkedworkitems": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "page_attachments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "pages": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "plans": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "projectroles": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "projects": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "projecttemplates": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "revisions": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "testparameter_definitions": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "testparameters": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "testrecord_attachments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "testrecords": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "testrun_attachments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "testrun_comments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "testruns": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "teststep_results": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "teststepresult_attachments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "teststeps": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "usergroups": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "users": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "workitem_approvals": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "workitem_attachments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "workitem_comments": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "workitems": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          },
          "workrecords": {
            "description": "Requested fields",
            "example": "@all",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SparseFields": {
        "$ref": "#/components/schemas/sparseFields"
      },
      "testparameter_definitionsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameter_definitions"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestParamDefinition",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testparameter_definitionsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameter_definitions"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestParamDefinition",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "name": {
                      "example": "Test Parameter Definition example",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions/MyTestParamDefinition",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testparameter_definitionsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameter_definitions"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "name": {
                      "example": "Test Parameter Definition example",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testparameter_definitionsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameter_definitions"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestParamDefinition",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions/MyTestParamDefinition",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testparameter_definitionsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testparameter_definitions"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestParamDefinition",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "name": {
                    "example": "Test Parameter Definition example",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions/MyTestParamDefinition",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testparameterdefinitions/MyTestParamDefinition",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testparametersListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameters"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyTestParameter",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testparametersListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameters"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyTestParameter",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "name": {
                      "example": "Example Test Parameter value",
                      "type": "string"
                    },
                    "value": {
                      "example": "Example Test Parameter value",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "definition": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyTestParamDefinition",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "testparameter_definitions"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters/MyTestParameter",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testparametersListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameters"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "name": {
                      "example": "Example Test Parameter value",
                      "type": "string"
                    },
                    "value": {
                      "example": "Example Test Parameter value",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testparametersListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testparameters"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyTestParameter",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters/MyTestParameter",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testparametersSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testparameters"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyTestParameter",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "name": {
                    "example": "Example Test Parameter value",
                    "type": "string"
                  },
                  "value": {
                    "example": "Example Test Parameter value",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "definition": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyTestParamDefinition",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "testparameter_definitions"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters/MyTestParameter",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testparameters/MyTestParameter",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrecord_attachmentsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecord_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/MyAttachmentId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrecord_attachmentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecord_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/MyAttachmentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyAttachmentId",
                      "type": "string"
                    },
                    "length": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments/MyAttachmentId/content",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments/MyAttachmentId",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrecord_attachmentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecord_attachments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrecord_attachmentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecord_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/MyAttachmentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments/MyAttachmentId/content",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments/MyAttachmentId",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrecord_attachmentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrecord_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/MyAttachmentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "fileName": {
                    "example": "File Name",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyAttachmentId",
                    "type": "string"
                  },
                  "length": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "content": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments/MyAttachmentId/content",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments/MyAttachmentId",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/attachments/MyAttachmentId",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrecord_attachmentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrecord_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/MyAttachmentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrecordsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecords"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "elibrary/MyTestRunId/MyProjectId/MyTestcaseId/0",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "executed": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "iteration": {
                      "example": 0,
                      "format": "int32",
                      "type": "integer"
                    },
                    "result": {
                      "example": "passed",
                      "type": "string"
                    },
                    "testCaseRevision": {
                      "example": "Test Case Revision",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "defect": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "executedBy": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "testCase": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrecordsListPatchRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecords"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "elibrary/MyTestRunId/MyProjectId/MyTestcaseId/0",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "executed": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "result": {
                      "example": "passed",
                      "type": "string"
                    },
                    "testCaseRevision": {
                      "example": "Test Case Revision",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "defect": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "executedBy": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrecordsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecords"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "executed": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "result": {
                      "example": "passed",
                      "type": "string"
                    },
                    "testCaseRevision": {
                      "example": "Test Case Revision",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "defect": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "executedBy": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "testCase": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrecordsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrecords"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "elibrary/MyTestRunId/MyProjectId/MyTestcaseId/0",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrecordsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrecords"
                ],
                "type": "string"
              },
              "id": {
                "example": "elibrary/MyTestRunId/MyProjectId/MyTestcaseId/0",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "comment": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "executed": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "iteration": {
                    "example": 0,
                    "format": "int32",
                    "type": "integer"
                  },
                  "result": {
                    "example": "passed",
                    "type": "string"
                  },
                  "testCaseRevision": {
                    "example": "Test Case Revision",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "defect": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "executedBy": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "testCase": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/elibrary/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrecordsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrecords"
                ],
                "type": "string"
              },
              "id": {
                "example": "elibrary/MyTestRunId/MyProjectId/MyTestcaseId/0",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "comment": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "executed": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "result": {
                    "example": "passed",
                    "type": "string"
                  },
                  "testCaseRevision": {
                    "example": "Test Case Revision",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "defect": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "executedBy": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrun_attachmentsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyAttachmentId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrun_attachmentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyAttachmentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyAttachmentId",
                      "type": "string"
                    },
                    "length": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments/MyAttachmentId/content?revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments/MyAttachmentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrun_attachmentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_attachments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrun_attachmentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyAttachmentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments/MyAttachmentId/content?revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments/MyAttachmentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrun_attachmentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrun_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyAttachmentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "fileName": {
                    "example": "File Name",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyAttachmentId",
                    "type": "string"
                  },
                  "length": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "content": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments/MyAttachmentId/content?revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments/MyAttachmentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/attachments/MyAttachmentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrun_attachmentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrun_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyAttachmentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrun_commentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_comments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyCommentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyCommentId",
                      "type": "string"
                    },
                    "resolved": {
                      "type": "boolean"
                    },
                    "text": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "childComments": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyTestRunId/MyCommentId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "testrun_comments"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "parentComment": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyTestRunId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "testrun_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments/MyCommentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrun_commentsListPatchRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_comments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyCommentId",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "resolved": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrun_commentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_comments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "resolved": {
                      "type": "boolean"
                    },
                    "text": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "parentComment": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyTestRunId/MyCommentId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "testrun_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrun_commentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testrun_comments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyCommentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments/MyCommentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrun_commentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrun_comments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyCommentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyCommentId",
                    "type": "string"
                  },
                  "resolved": {
                    "type": "boolean"
                  },
                  "text": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "childComments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyTestRunId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "testrun_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parentComment": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyTestRunId/MyCommentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "testrun_comments"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments/MyCommentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/comments/MyCommentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrun_commentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testrun_comments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyCommentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "resolved": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrunsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testruns"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrunsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testruns"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "finishedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "example": "Group ID",
                      "type": "string"
                    },
                    "homePageContent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "example": "ID",
                      "type": "string"
                    },
                    "idPrefix": {
                      "example": "MyTestRunIdPrefix",
                      "type": "string"
                    },
                    "isTemplate": {
                      "type": "boolean"
                    },
                    "keepInHistory": {
                      "type": "boolean"
                    },
                    "query": {
                      "example": "Query",
                      "type": "string"
                    },
                    "selectTestCasesBy": {
                      "enum": [
                        "manualSelection",
                        "staticQueryResult",
                        "dynamicQueryResult",
                        "staticLiveDoc",
                        "dynamicLiveDoc",
                        "automatedProcess"
                      ],
                      "example": "manualSelection",
                      "type": "string"
                    },
                    "status": {
                      "example": "open",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "type": {
                      "example": "manual",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "useReportFromTemplate": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "document": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "projectSpan": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "projects"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "summaryDefect": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "template": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyTestRunId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "testruns"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/testrun?id=MyTestRunId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "portal": {
                "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/testruns",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrunsListPatchRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testruns"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "finishedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "example": "Group ID",
                      "type": "string"
                    },
                    "homePageContent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "idPrefix": {
                      "example": "MyTestRunIdPrefix",
                      "type": "string"
                    },
                    "keepInHistory": {
                      "type": "boolean"
                    },
                    "query": {
                      "example": "Query",
                      "type": "string"
                    },
                    "selectTestCasesBy": {
                      "enum": [
                        "manualSelection",
                        "staticQueryResult",
                        "dynamicQueryResult",
                        "staticLiveDoc",
                        "dynamicLiveDoc",
                        "automatedProcess"
                      ],
                      "example": "manualSelection",
                      "type": "string"
                    },
                    "status": {
                      "example": "open",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "type": {
                      "example": "manual",
                      "type": "string"
                    },
                    "useReportFromTemplate": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "document": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "projectSpan": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "projects"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "summaryDefect": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrunsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testruns"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "finishedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "groupId": {
                      "example": "Group ID",
                      "type": "string"
                    },
                    "homePageContent": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "example": "ID",
                      "type": "string"
                    },
                    "idPrefix": {
                      "example": "MyTestRunIdPrefix",
                      "type": "string"
                    },
                    "isTemplate": {
                      "type": "boolean"
                    },
                    "keepInHistory": {
                      "type": "boolean"
                    },
                    "query": {
                      "example": "Query",
                      "type": "string"
                    },
                    "selectTestCasesBy": {
                      "enum": [
                        "manualSelection",
                        "staticQueryResult",
                        "dynamicQueryResult",
                        "staticLiveDoc",
                        "dynamicLiveDoc",
                        "automatedProcess"
                      ],
                      "example": "manualSelection",
                      "type": "string"
                    },
                    "status": {
                      "example": "open",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "type": {
                      "example": "manual",
                      "type": "string"
                    },
                    "useReportFromTemplate": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "document": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "projectSpan": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "projects"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "summaryDefect": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "template": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyTestRunId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "testruns"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrunsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "testruns"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/testrun?id=MyTestRunId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "testrunsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testruns"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "finishedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "groupId": {
                    "example": "Group ID",
                    "type": "string"
                  },
                  "homePageContent": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "example": "ID",
                    "type": "string"
                  },
                  "idPrefix": {
                    "example": "MyTestRunIdPrefix",
                    "type": "string"
                  },
                  "isTemplate": {
                    "type": "boolean"
                  },
                  "keepInHistory": {
                    "type": "boolean"
                  },
                  "query": {
                    "example": "Query",
                    "type": "string"
                  },
                  "selectTestCasesBy": {
                    "enum": [
                      "manualSelection",
                      "staticQueryResult",
                      "dynamicQueryResult",
                      "staticLiveDoc",
                      "dynamicLiveDoc",
                      "automatedProcess"
                    ],
                    "example": "manualSelection",
                    "type": "string"
                  },
                  "status": {
                    "example": "open",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "type": {
                    "example": "manual",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "useReportFromTemplate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "document": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "projectSpan": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "summaryDefect": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "template": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyTestRunId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "testruns"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "portal": {
                    "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/testrun?id=MyTestRunId&revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "testrunsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "testruns"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "finishedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "groupId": {
                    "example": "Group ID",
                    "type": "string"
                  },
                  "homePageContent": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "idPrefix": {
                    "example": "MyTestRunIdPrefix",
                    "type": "string"
                  },
                  "keepInHistory": {
                    "type": "boolean"
                  },
                  "query": {
                    "example": "Query",
                    "type": "string"
                  },
                  "selectTestCasesBy": {
                    "enum": [
                      "manualSelection",
                      "staticQueryResult",
                      "dynamicQueryResult",
                      "staticLiveDoc",
                      "dynamicLiveDoc",
                      "automatedProcess"
                    ],
                    "example": "manualSelection",
                    "type": "string"
                  },
                  "status": {
                    "example": "open",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "type": {
                    "example": "manual",
                    "type": "string"
                  },
                  "useReportFromTemplate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "document": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "projectSpan": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "summaryDefect": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitems"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststep_resultsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststep_results"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "result": {
                      "example": "passed",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "testStep": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "teststeps"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststep_resultsListPatchRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststep_results"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "result": {
                      "example": "passed",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststep_resultsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststep_results"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "result": {
                      "example": "passed",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststep_resultsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststep_results"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststep_resultsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "teststep_results"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "comment": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "result": {
                    "example": "passed",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "testStep": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "teststeps"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststep_resultsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "teststep_results"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "comment": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "result": {
                    "example": "passed",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststepresult_attachmentsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststepresult_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1/MyAttachmentId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststepresult_attachmentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststepresult_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1/MyAttachmentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyAttachmentId",
                      "type": "string"
                    },
                    "length": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments/MyAttachmentId/content",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments/MyAttachmentId",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststepresult_attachmentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststepresult_attachments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststepresult_attachmentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststepresult_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1/MyAttachmentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments/MyAttachmentId/content",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments/MyAttachmentId",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststepresult_attachmentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "teststepresult_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1/MyAttachmentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "fileName": {
                    "example": "File Name",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyAttachmentId",
                    "type": "string"
                  },
                  "length": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "content": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments/MyAttachmentId/content",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments/MyAttachmentId",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/testruns/MyTestRunId/testrecords/MyProjectId/MyTestcaseId/0/teststepresults/1/attachments/MyAttachmentId",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststepresult_attachmentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "teststepresult_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyTestRunId/MyProjectId/MyTestcaseId/0/1/MyAttachmentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststepsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststeps"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststepsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststeps"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "index": {
                      "type": "string"
                    },
                    "keys": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "values": {
                      "items": {
                        "properties": {
                          "type": {
                            "enum": [
                              "text/html",
                              "text/plain"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "example": "My text value",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps/MyTestStepIndex?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststepsListPatchRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststeps"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "keys": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "values": {
                      "items": {
                        "properties": {
                          "type": {
                            "enum": [
                              "text/html",
                              "text/plain"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "example": "My text value",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststepsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststeps"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "keys": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "values": {
                      "items": {
                        "properties": {
                          "type": {
                            "enum": [
                              "text/html",
                              "text/plain"
                            ],
                            "type": "string"
                          },
                          "value": {
                            "example": "My text value",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststepsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "teststeps"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps/MyTestStepIndex?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "teststepsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "teststeps"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "index": {
                    "type": "string"
                  },
                  "keys": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "values": {
                    "items": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps/MyTestStepIndex?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/teststeps/MyTestStepIndex?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "teststepsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "teststeps"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "keys": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "values": {
                    "items": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "updateAvatarRequestBody": {
        "properties": {
          "content": {
            "description": "avatar content",
            "format": "binary",
            "type": "string"
          }
        },
        "title": "UpdateAvatarRequestBody",
        "type": "object"
      },
      "usergroupsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "usergroups"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyUserGroupId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "id": {
                    "example": "MyUserGroupId",
                    "type": "string"
                  },
                  "ldapSearchFilter": {
                    "example": "LDAP Search Filter",
                    "type": "string"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  },
                  "ssoSynchronizationAllowed": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "globalRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyRoleId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "globalroles"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "projectRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyRoleId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projectroles"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "users": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/usergroups/MyUserGroupId",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/usergroups/MyUserGroupId",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "usersListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "users"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyUserId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "avatarUrl": {
                      "example": "http://server-host-name/application-path/icons/avatar/MyUserId/avatar.png?revision=1234",
                      "type": "string"
                    },
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "disabledNotifications": {
                      "type": "boolean"
                    },
                    "email": {
                      "example": "Email",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyUserId",
                      "type": "string"
                    },
                    "initials": {
                      "example": "Initials",
                      "type": "string"
                    },
                    "name": {
                      "example": "Name",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "globalRoles": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyRoleId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "globalroles"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "projectRoles": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyRoleId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "projectroles"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "userGroups": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserGroupId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "usergroups"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/users/MyUserId",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/users?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/users?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/users?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/users?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/users?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "usersListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "users"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "disabledNotifications": {
                      "type": "boolean"
                    },
                    "email": {
                      "example": "Email",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyUserId",
                      "type": "string"
                    },
                    "initials": {
                      "example": "Initials",
                      "type": "string"
                    },
                    "name": {
                      "example": "Name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "globalRoles": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyRoleId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "globalroles"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "projectRoles": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyRoleId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "projectroles"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "userGroups": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserGroupId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "usergroups"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "usersListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "users"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyUserId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/users/MyUserId",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "usersSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "users"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyUserId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "avatarUrl": {
                    "example": "http://server-host-name/application-path/icons/avatar/MyUserId/avatar.png?revision=1234",
                    "type": "string"
                  },
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "disabledNotifications": {
                    "type": "boolean"
                  },
                  "email": {
                    "example": "Email",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyUserId",
                    "type": "string"
                  },
                  "initials": {
                    "example": "Initials",
                    "type": "string"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "globalRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyRoleId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "globalroles"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "projectRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyRoleId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projectroles"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "userGroups": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserGroupId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "usergroups"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/users/MyUserId",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/users/MyUserId",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "usersSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "users"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyUserId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "disabledNotifications": {
                    "type": "boolean"
                  },
                  "email": {
                    "example": "Email",
                    "type": "string"
                  },
                  "initials": {
                    "example": "Initials",
                    "type": "string"
                  },
                  "name": {
                    "example": "Name",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "globalRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyRoleId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "globalroles"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "projectRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyRoleId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projectroles"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "userGroups": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserGroupId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "usergroups"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workflowActionsActionResponseBody": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "available": {
                  "type": "boolean"
                },
                "clearedFields": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "isAddingSignature": {
                  "type": "boolean"
                },
                "isSignatureRequired": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "nativeActionId": {
                  "type": "string"
                },
                "requiredFields": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "requiredRoles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "targetStatus": {
                  "type": "string"
                },
                "unavailableReason": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/actions/getWorkflowActions?page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/actions/getWorkflowActions?page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/actions/getWorkflowActions?page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/actions/getWorkflowActions?page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/actions/getWorkflowActions?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_approvalsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_approvals"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyUserId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_approvalsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_approvals"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyUserId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "status": {
                      "enum": [
                        "waiting",
                        "approved",
                        "disapproved"
                      ],
                      "example": "waiting",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "user": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals/MyUserId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_approvalsListPatchRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_approvals"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyUserId",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "status": {
                      "enum": [
                        "waiting",
                        "approved",
                        "disapproved"
                      ],
                      "example": "waiting",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_approvalsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_approvals"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "status": {
                      "enum": [
                        "waiting",
                        "approved",
                        "disapproved"
                      ],
                      "example": "waiting",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "user": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_approvalsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_approvals"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyUserId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals/MyUserId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_approvalsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitem_approvals"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyUserId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "status": {
                    "enum": [
                      "waiting",
                      "approved",
                      "disapproved"
                    ],
                    "example": "waiting",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals/MyUserId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/approvals/MyUserId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_approvalsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitem_approvals"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyUserId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "status": {
                    "enum": [
                      "waiting",
                      "approved",
                      "disapproved"
                    ],
                    "example": "waiting",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_attachmentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyAttachmentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyAttachmentId",
                      "type": "string"
                    },
                    "length": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments/MyAttachmentId/content?revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments/MyAttachmentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_attachmentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_attachments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "fileName": {
                      "example": "File Name",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "lid": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_attachmentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_attachments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyAttachmentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "content": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments/MyAttachmentId/content?revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments/MyAttachmentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_attachmentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitem_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyAttachmentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "fileName": {
                    "example": "File Name",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyAttachmentId",
                    "type": "string"
                  },
                  "length": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "content": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments/MyAttachmentId/content?revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments/MyAttachmentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments/MyAttachmentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_attachmentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitem_attachments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyAttachmentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_commentsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_comments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyCommentId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "example": "MyCommentId",
                      "type": "string"
                    },
                    "resolved": {
                      "type": "boolean"
                    },
                    "text": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "childComments": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/MyCommentId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "workitem_comments"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "parentComment": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitem_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments/MyCommentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_commentsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_comments"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "resolved": {
                      "type": "boolean"
                    },
                    "text": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "parentComment": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyCommentId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitem_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_commentsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitem_comments"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyCommentId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments/MyCommentId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitem_commentsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitem_comments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyCommentId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "id": {
                    "example": "MyCommentId",
                    "type": "string"
                  },
                  "resolved": {
                    "type": "boolean"
                  },
                  "text": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "childComments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitem_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parentComment": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MyWorkItemId/MyCommentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "workitem_comments"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments/MyCommentId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments/MyCommentId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitem_commentsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitem_comments"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyCommentId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "resolved": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitemsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitemsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "created": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "dueDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "hyperlinks": {
                      "items": {
                        "properties": {
                          "role": {
                            "example": "ref_ext",
                            "type": "string"
                          },
                          "uri": {
                            "example": "https://polarion.plm.automation.siemens.com",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "id": {
                      "example": "MyWorkItemId",
                      "type": "string"
                    },
                    "initialEstimate": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "outlineNumber": {
                      "example": "1.11",
                      "type": "string"
                    },
                    "plannedEnd": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "plannedStart": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "priority": {
                      "example": "90.0",
                      "type": "string"
                    },
                    "remainingEstimate": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "resolution": {
                      "example": "done",
                      "type": "string"
                    },
                    "resolvedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "severity": {
                      "example": "blocker",
                      "type": "string"
                    },
                    "status": {
                      "example": "open",
                      "type": "string"
                    },
                    "timeSpent": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "type": {
                      "example": "task",
                      "type": "string"
                    },
                    "updated": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "approvals": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "workitem_approvals"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "assignee": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "users"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "attachments": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/MyAttachmentId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "workitem_attachments"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "links": {
                          "properties": {
                            "related": {
                              "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments?revision=1234",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "backlinkedWorkItems": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "linkedworkitems"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "categories": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyCategoryId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "categories"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "comments": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/MyCommentId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "workitem_comments"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "links": {
                          "properties": {
                            "related": {
                              "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments?revision=1234",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "externallyLinkedWorkItems": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/parent/hostname/MyProjectId/MyLinkedWorkItemId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "externallylinkedworkitems"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "linkedOslcResources": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/http://server-host-name/ns/cm#relatedChangeRequest/http://server-host-name/application-path/oslc/services/projects/MyProjectId/workitems/MyWorkItemId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "linkedoslcresources"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "linkedRevisions": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "default/1234",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "revisions"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "linkedWorkItems": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "linkedworkitems"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "links": {
                          "properties": {
                            "related": {
                              "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems?revision=1234",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "module": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "plannedIn": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyPlanId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "plans"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "testSteps": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "teststeps"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "votes": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "users"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "watches": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "users"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "workRecords": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                                "type": "string"
                              },
                              "revision": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "workrecords"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "totalCount": {
                              "format": "int32",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/workitem?id=MyWorkItemId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "portal": {
                "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/workitems",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitemsListPatchRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "dueDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "hyperlinks": {
                      "items": {
                        "properties": {
                          "role": {
                            "example": "ref_ext",
                            "type": "string"
                          },
                          "uri": {
                            "example": "https://polarion.plm.automation.siemens.com",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "initialEstimate": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "priority": {
                      "example": "90.0",
                      "type": "string"
                    },
                    "remainingEstimate": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "resolution": {
                      "example": "done",
                      "type": "string"
                    },
                    "resolvedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "severity": {
                      "example": "blocker",
                      "type": "string"
                    },
                    "status": {
                      "example": "open",
                      "type": "string"
                    },
                    "timeSpent": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "assignee": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "users"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "categories": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyCategoryId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "categories"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "linkedRevisions": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "default/1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "revisions"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "votes": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "users"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "watches": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "users"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitemsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitems"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "description": {
                      "properties": {
                        "type": {
                          "enum": [
                            "text/html",
                            "text/plain"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "example": "My text value",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "dueDate": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "hyperlinks": {
                      "items": {
                        "properties": {
                          "role": {
                            "example": "ref_ext",
                            "type": "string"
                          },
                          "uri": {
                            "example": "https://polarion.plm.automation.siemens.com",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "initialEstimate": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "priority": {
                      "example": "90.0",
                      "type": "string"
                    },
                    "remainingEstimate": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "resolution": {
                      "example": "done",
                      "type": "string"
                    },
                    "resolvedOn": {
                      "example": "1970-01-01T00:00:00Z",
                      "format": "date-time",
                      "type": "string"
                    },
                    "severity": {
                      "example": "blocker",
                      "type": "string"
                    },
                    "status": {
                      "example": "open",
                      "type": "string"
                    },
                    "timeSpent": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "title": {
                      "example": "Title",
                      "type": "string"
                    },
                    "type": {
                      "example": "task",
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "assignee": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyUserId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "users"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "author": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "categories": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "MyProjectId/MyCategoryId",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "categories"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "linkedRevisions": {
                      "properties": {
                        "data": {
                          "items": {
                            "properties": {
                              "id": {
                                "example": "default/1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "revisions"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "module": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MySpaceId/MyDocumentId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "documents"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitemsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workitems"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "portal": {
                      "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/workitem?id=MyWorkItemId&revision=1234",
                      "type": "string"
                    },
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workitemsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitems"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "created": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "dueDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "hyperlinks": {
                    "items": {
                      "properties": {
                        "role": {
                          "example": "ref_ext",
                          "type": "string"
                        },
                        "uri": {
                          "example": "https://polarion.plm.automation.siemens.com",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "example": "MyWorkItemId",
                    "type": "string"
                  },
                  "initialEstimate": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "outlineNumber": {
                    "example": "1.11",
                    "type": "string"
                  },
                  "plannedEnd": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "plannedStart": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "priority": {
                    "example": "90.0",
                    "type": "string"
                  },
                  "remainingEstimate": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "resolution": {
                    "example": "done",
                    "type": "string"
                  },
                  "resolvedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "severity": {
                    "example": "blocker",
                    "type": "string"
                  },
                  "status": {
                    "example": "open",
                    "type": "string"
                  },
                  "timeSpent": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  },
                  "type": {
                    "example": "task",
                    "type": "string"
                  },
                  "updated": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "approvals": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workrecords"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "assignee": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "attachments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyAttachmentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitem_attachments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/attachments?revision=1234",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "author": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "backlinkedWorkItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "linkedworkitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyCategoryId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "categories"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "comments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyCommentId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workitem_comments"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/comments?revision=1234",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "externallyLinkedWorkItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/parent/hostname/MyProjectId/MyLinkedWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "externallylinkedworkitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "linkedOslcResources": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/http://server-host-name/ns/cm#relatedChangeRequest/http://server-host-name/application-path/oslc/services/projects/MyProjectId/workitems/MyWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "linkedoslcresources"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "linkedRevisions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "default/1234",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "revisions"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "linkedWorkItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/parent/MyProjectId/MyLinkedWorkItemId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "linkedworkitems"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/linkedworkitems?revision=1234",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "module": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId/MySpaceId/MyDocumentId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "documents"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "plannedIn": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyPlanId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "plans"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "testSteps": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyTestStepIndex",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "teststeps"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "votes": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "watches": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "workRecords": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "workrecords"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "meta": {
                        "properties": {
                          "totalCount": {
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "portal": {
                    "example": "server-host-name/application-path/polarion/redirect/project/MyProjectId/workitem?id=MyWorkItemId&revision=1234",
                    "type": "string"
                  },
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workitemsSinglePatchRequest": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workitems"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "description": {
                    "properties": {
                      "type": {
                        "enum": [
                          "text/html",
                          "text/plain"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "example": "My text value",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "dueDate": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "hyperlinks": {
                    "items": {
                      "properties": {
                        "role": {
                          "example": "ref_ext",
                          "type": "string"
                        },
                        "uri": {
                          "example": "https://polarion.plm.automation.siemens.com",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "initialEstimate": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "priority": {
                    "example": "90.0",
                    "type": "string"
                  },
                  "remainingEstimate": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "resolution": {
                    "example": "done",
                    "type": "string"
                  },
                  "resolvedOn": {
                    "example": "1970-01-01T00:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "severity": {
                    "example": "blocker",
                    "type": "string"
                  },
                  "status": {
                    "example": "open",
                    "type": "string"
                  },
                  "timeSpent": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "title": {
                    "example": "Title",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "assignee": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId/MyCategoryId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "categories"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "linkedRevisions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "default/1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "revisions"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "votes": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "watches": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workrecordsListDeleteRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workrecords"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workrecordsListGetResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workrecords"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                  "type": "string"
                },
                "revision": {
                  "example": "1234",
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "example": "Comment",
                      "type": "string"
                    },
                    "date": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "timeSpent": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "type": {
                      "example": "task",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "project": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyProjectId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "projects"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "user": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "revision": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords/MyWorkRecordId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "description": "Human-readable explanation specific to this occurrence of the problem.",
                            "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                            "type": "string"
                          },
                          "source": {
                            "properties": {
                              "parameter": {
                                "description": "String indicating which URI query parameter caused the error.",
                                "example": "revision",
                                "type": "string"
                              },
                              "pointer": {
                                "description": "JSON Pointer to the associated entity in the request document.",
                                "example": "$.data",
                                "type": "string"
                              },
                              "resource": {
                                "description": "Resource causing the error.",
                                "properties": {
                                  "id": {
                                    "example": "MyProjectId/id",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "HTTP status code applicable to this problem.",
                            "example": "400",
                            "type": "string"
                          },
                          "title": {
                            "description": "Short, human-readable summary of the problem.",
                            "example": "Bad Request",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "first": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords?page%5Bsize%5D=10&page%5Bnumber%5D=1",
                "type": "string"
              },
              "last": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords?page%5Bsize%5D=10&page%5Bnumber%5D=9",
                "type": "string"
              },
              "next": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords?page%5Bsize%5D=10&page%5Bnumber%5D=6",
                "type": "string"
              },
              "prev": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords?page%5Bsize%5D=10&page%5Bnumber%5D=4",
                "type": "string"
              },
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords?page%5Bsize%5D=10&page%5Bnumber%5D=5",
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "properties": {
              "totalCount": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "workrecordsListPostRequest": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workrecords"
                  ],
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "comment": {
                      "example": "Comment",
                      "type": "string"
                    },
                    "date": {
                      "example": "1970-01-01",
                      "format": "date",
                      "type": "string"
                    },
                    "timeSpent": {
                      "example": "5 1/2d",
                      "type": "string"
                    },
                    "type": {
                      "example": "task",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "relationships": {
                  "properties": {
                    "user": {
                      "properties": {
                        "data": {
                          "properties": {
                            "id": {
                              "example": "MyUserId",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "users"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workrecordsListPostResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "type": {
                  "enum": [
                    "workrecords"
                  ],
                  "type": "string"
                },
                "id": {
                  "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                  "type": "string"
                },
                "links": {
                  "properties": {
                    "self": {
                      "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords/MyWorkRecordId?revision=1234",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "workrecordsSingleGetResponse": {
        "properties": {
          "data": {
            "properties": {
              "type": {
                "enum": [
                  "workrecords"
                ],
                "type": "string"
              },
              "id": {
                "example": "MyProjectId/MyWorkItemId/MyWorkRecordId",
                "type": "string"
              },
              "revision": {
                "example": "1234",
                "type": "string"
              },
              "attributes": {
                "properties": {
                  "comment": {
                    "example": "Comment",
                    "type": "string"
                  },
                  "date": {
                    "example": "1970-01-01",
                    "format": "date",
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "timeSpent": {
                    "example": "5 1/2d",
                    "type": "string"
                  },
                  "type": {
                    "example": "task",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "project": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyProjectId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "projects"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "MyUserId",
                            "type": "string"
                          },
                          "revision": {
                            "example": "1234",
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "users"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "links": {
                "properties": {
                  "self": {
                    "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords/MyWorkRecordId?revision=1234",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "meta": {
                "properties": {
                  "errors": {
                    "items": {
                      "properties": {
                        "detail": {
                          "description": "Human-readable explanation specific to this occurrence of the problem.",
                          "example": "Unexpected token, BEGIN_ARRAY expected, but was : BEGIN_OBJECT (at $.data)",
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "parameter": {
                              "description": "String indicating which URI query parameter caused the error.",
                              "example": "revision",
                              "type": "string"
                            },
                            "pointer": {
                              "description": "JSON Pointer to the associated entity in the request document.",
                              "example": "$.data",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource causing the error.",
                              "properties": {
                                "id": {
                                  "example": "MyProjectId/id",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "type",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "status": {
                          "description": "HTTP status code applicable to this problem.",
                          "example": "400",
                          "type": "string"
                        },
                        "title": {
                          "description": "Short, human-readable summary of the problem.",
                          "example": "Bad Request",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "included": {
            "description": "Related entities might be returned, see <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "properties": {
              "self": {
                "example": "server-host-name/application-path/projects/MyProjectId/workitems/MyWorkItemId/workrecords/MyWorkRecordId?revision=1234",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "name": "Polarion REST API Support",
      "url": "https://polarion.plm.automation.siemens.com/techsupport/resources"
    },
    "description": "<h5>About</h5>The Polarion REST API lets you interact with Polarion programmatically. Use this API to integrate Polarion with your applications. This page documents the REST resources, including the HTTP response codes and example requests and responses. <br/><br/>For a detailed description of the REST API and how to use it, see the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>(available on Support Center).",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Polarion REST API",
    "version": "v1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/all/documents/actions/branch": {
      "post": {
        "operationId": "branchDocuments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/branchDocumentsRequestBody"
              }
            }
          },
          "description": "Branching parameters.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates Branches of Documents.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/all/workitems": {
      "delete": {
        "operationId": "deleteAllWorkItems",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitemsListDeleteRequest"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Work Items from the Global context.",
        "tags": [
          "Work Items"
        ]
      },
      "get": {
        "operationId": "getAllWorkItems",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitemsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Work Items from the Global context.",
        "tags": [
          "Work Items"
        ]
      },
      "patch": {
        "operationId": "patchAllWorkItems",
        "parameters": [
          {
            "name": "workflowAction",
            "in": "query",
            "description": "The Workflow Action.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitemsListPatchRequest"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Work Items in the Global context.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/enumerations": {
      "post": {
        "operationId": "postGlobalEnumeration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enumerationsListPostRequest"
              }
            }
          },
          "description": "The Enumeration(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumerationsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Enumerations in the Global context.",
        "tags": [
          "Enumerations"
        ]
      }
    },
    "/enumerations/{enumContext}/{enumName}/{targetType}": {
      "delete": {
        "operationId": "deleteGlobalEnumeration",
        "parameters": [
          {
            "name": "enumContext",
            "in": "path",
            "description": "The Enumeration context. (Allowed values are '~', 'plans', 'testing' and 'documents'. Use '~' for Work Item or general enumerations.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumName",
            "in": "path",
            "description": "The Enumeration Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "path",
            "description": "The Enumeration target type. (Use '~' when there is no specific type for the enumeration.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Enumeration from the Global context.",
        "tags": [
          "Enumerations"
        ]
      },
      "get": {
        "operationId": "getGlobalEnumeration",
        "parameters": [
          {
            "name": "enumContext",
            "in": "path",
            "description": "The Enumeration context. (Allowed values are '~', 'plans', 'testing' and 'documents'. Use '~' for Work Item or general enumerations.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumName",
            "in": "path",
            "description": "The Enumeration Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "path",
            "description": "The Enumeration target type. (Use '~' when there is no specific type for the enumeration.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumerationsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Enumeration from the Global context.",
        "tags": [
          "Enumerations"
        ]
      },
      "patch": {
        "operationId": "patchGlobalEnumeration",
        "parameters": [
          {
            "name": "enumContext",
            "in": "path",
            "description": "The Enumeration context. (Allowed values are '~', 'plans', 'testing' and 'documents'. Use '~' for Work Item or general enumerations.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumName",
            "in": "path",
            "description": "The Enumeration Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "path",
            "description": "The Enumeration target type. (Use '~' when there is no specific type for the enumeration.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enumerationsSinglePatchRequest"
              }
            }
          },
          "description": "The Enumeration(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Enumeration in the Global context.",
        "tags": [
          "Enumerations"
        ]
      }
    },
    "/enumerations/defaulticons": {
      "get": {
        "operationId": "getDefaultIcons",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Icons from the default context.",
        "tags": [
          "Icons"
        ]
      }
    },
    "/enumerations/defaulticons/{iconId}": {
      "get": {
        "operationId": "getDefaultIcon",
        "parameters": [
          {
            "name": "iconId",
            "in": "path",
            "description": "The Icon ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Icon from the default context.",
        "tags": [
          "Icons"
        ]
      }
    },
    "/enumerations/icons": {
      "get": {
        "operationId": "getGlobalIcons",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Icons from the Global context.",
        "tags": [
          "Icons"
        ]
      },
      "post": {
        "description": "Icons are identified by order",
        "operationId": "postGlobalIcons",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostIconsRequestBody"
              }
            }
          },
          "description": "Icon meta data and file data",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Icons in the Global context.",
        "tags": [
          "Icons"
        ]
      }
    },
    "/enumerations/icons/{iconId}": {
      "get": {
        "operationId": "getGlobalIcon",
        "parameters": [
          {
            "name": "iconId",
            "in": "path",
            "description": "The Icon ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Icon from the Global context.",
        "tags": [
          "Icons"
        ]
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "operationId": "getJob",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "The Job ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Job.",
        "tags": [
          "Jobs"
        ]
      }
    },
    "/jobs/{jobId}/actions/download/{filename}": {
      "get": {
        "operationId": "getJobResultFileContent",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "The Job ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The Download File Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Downloads the file content for a specified job.",
        "tags": [
          "Jobs"
        ]
      }
    },
    "/projects": {
      "get": {
        "operationId": "getProjects",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projectsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Projects.",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/{projectId}": {
      "delete": {
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Project.",
        "tags": [
          "Projects"
        ]
      },
      "get": {
        "operationId": "getProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projectsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Project.",
        "tags": [
          "Projects"
        ]
      },
      "patch": {
        "operationId": "patchProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/projectsSinglePatchRequest"
              }
            }
          },
          "description": "The Project body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Project.",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/{projectId}/actions/moveProject": {
      "post": {
        "operationId": "moveProjectAction",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/moveProjectRequestBody"
              }
            }
          },
          "description": "Move project parameters.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Moves project to a different location",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/{projectId}/actions/unmarkProject": {
      "post": {
        "operationId": "unmarkProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Unmarks the Project.",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/{projectId}/collections": {
      "delete": {
        "operationId": "deleteCollections",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collectionsListDeleteRequest"
              }
            }
          },
          "description": "The Collection(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Collections.",
        "tags": [
          "Collections"
        ]
      },
      "get": {
        "operationId": "getCollections",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/collectionsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Collections.",
        "tags": [
          "Collections"
        ]
      },
      "post": {
        "operationId": "postCollections",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collectionsListPostRequest"
              }
            }
          },
          "description": "The Collection(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/collectionsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Collections.",
        "tags": [
          "Collections"
        ]
      }
    },
    "/projects/{projectId}/collections/{collectionId}": {
      "delete": {
        "operationId": "deleteCollection",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Collection.",
        "tags": [
          "Collections"
        ]
      },
      "get": {
        "operationId": "getCollection",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/collectionsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Collection.",
        "tags": [
          "Collections"
        ]
      },
      "patch": {
        "operationId": "patchCollections",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collectionsSinglePatchRequest"
              }
            }
          },
          "description": "The Collection(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Collection.",
        "tags": [
          "Collections"
        ]
      }
    },
    "/projects/{projectId}/collections/{collectionId}/actions/close": {
      "post": {
        "operationId": "closeCollection",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Closes the specified Collection.",
        "tags": [
          "Collections"
        ]
      }
    },
    "/projects/{projectId}/collections/{collectionId}/actions/reopen": {
      "post": {
        "operationId": "reopenCollection",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Reopens the specified Collection.",
        "tags": [
          "Collections"
        ]
      }
    },
    "/projects/{projectId}/collections/{collectionId}/relationships/{relationshipId}": {
      "delete": {
        "operationId": "deleteCollectionsRelationship",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationshipsListDeleteRequest"
              }
            }
          },
          "description": "The Relationship body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Not Allowed"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Removes the specific Relationship from the Collection.",
        "tags": [
          "Collections"
        ]
      },
      "get": {
        "operationId": "getCollectionsRelationship",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Collection Relationships.",
        "tags": [
          "Collections"
        ]
      },
      "patch": {
        "operationId": "patchCollectionsRelationships",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsRequestWithRevisionBody"
              }
            }
          },
          "description": "The Relationship body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Collection Relationships.",
        "tags": [
          "Collections"
        ]
      },
      "post": {
        "operationId": "postCollectionsRelationships",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The Collection ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsRequestWithRevisionBody"
              }
            }
          },
          "description": "The Document(s) body.",
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {}
            },
            "description": "default response"
          }
        },
        "summary": "Creates the specific Relationships for the Collections.",
        "tags": [
          "Collections"
        ]
      }
    },
    "/projects/{projectId}/documents/fields/{fieldId}/actions/getAvailableOptions": {
      "get": {
        "operationId": "getAvailableEnumOptionsForDocumentType",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The Field ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The Type of the object.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumOptionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of available options for the requested field for the specified Document type.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/enumerations": {
      "post": {
        "operationId": "postProjectEnumeration",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enumerationsListPostRequest"
              }
            }
          },
          "description": "The Enumeration(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumerationsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Enumerations in the Project context.",
        "tags": [
          "Enumerations"
        ]
      }
    },
    "/projects/{projectId}/enumerations/{enumContext}/{enumName}/{targetType}": {
      "delete": {
        "operationId": "deleteProjectEnumeration",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumContext",
            "in": "path",
            "description": "The Enumeration context. (Allowed values are '~', 'plans', 'testing' and 'documents'. Use '~' for Work Item or general enumerations.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumName",
            "in": "path",
            "description": "The Enumeration Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "path",
            "description": "The Enumeration target type. (Use '~' when there is no specific type for the enumeration.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Enumeration from the Project context.",
        "tags": [
          "Enumerations"
        ]
      },
      "get": {
        "operationId": "getProjectEnumeration",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumContext",
            "in": "path",
            "description": "The Enumeration context. (Allowed values are '~', 'plans', 'testing' and 'documents'. Use '~' for Work Item or general enumerations.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumName",
            "in": "path",
            "description": "The Enumeration Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "path",
            "description": "The Enumeration target type. (Use '~' when there is no specific type for the enumeration.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumerationsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Enumeration from the Project context.",
        "tags": [
          "Enumerations"
        ]
      },
      "patch": {
        "operationId": "patchProjectEnumeration",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumContext",
            "in": "path",
            "description": "The Enumeration context. (Allowed values are '~', 'plans', 'testing' and 'documents'. Use '~' for Work Item or general enumerations.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enumName",
            "in": "path",
            "description": "The Enumeration Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "in": "path",
            "description": "The Enumeration target type. (Use '~' when there is no specific type for the enumeration.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/enumerationsSinglePatchRequest"
              }
            }
          },
          "description": "The Enumeration(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Enumeration in the Project context.",
        "tags": [
          "Enumerations"
        ]
      }
    },
    "/projects/{projectId}/enumerations/icons": {
      "get": {
        "operationId": "getProjectIcons",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Icons from the Project context.",
        "tags": [
          "Icons"
        ]
      },
      "post": {
        "description": "Icons are identified by order",
        "operationId": "postProjectIcons",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostIconsRequestBody"
              }
            }
          },
          "description": "Icon meta data and file data",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Icons in the Project context.",
        "tags": [
          "Icons"
        ]
      }
    },
    "/projects/{projectId}/enumerations/icons/{iconId}": {
      "get": {
        "operationId": "getProjectIcon",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iconId",
            "in": "path",
            "description": "The Icon ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iconsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Icon from the Project context.",
        "tags": [
          "Icons"
        ]
      }
    },
    "/projects/{projectId}/plans": {
      "delete": {
        "operationId": "deletePlans",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/plansListDeleteRequest"
              }
            }
          },
          "description": "The Plan(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Plans.",
        "tags": [
          "Plans"
        ]
      },
      "get": {
        "operationId": "getPlans",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templates",
            "in": "query",
            "description": "If set to true, only templates will be returned, otherwise only actual instances will be returned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plansListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Plans.",
        "tags": [
          "Plans"
        ]
      },
      "post": {
        "operationId": "postPlans",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/plansListPostRequest"
              }
            }
          },
          "description": "The Plan(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plansListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Plans.",
        "tags": [
          "Plans"
        ]
      }
    },
    "/projects/{projectId}/plans/{planId}": {
      "delete": {
        "operationId": "deletePlan",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The Plan ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Plan.",
        "tags": [
          "Plans"
        ]
      },
      "get": {
        "operationId": "getPlan",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The Plan ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plansSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Plan.",
        "tags": [
          "Plans"
        ]
      },
      "patch": {
        "operationId": "patchPlan",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The Plan ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/plansSinglePatchRequest"
              }
            }
          },
          "description": "The Plan body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Plan.",
        "tags": [
          "Plans"
        ]
      }
    },
    "/projects/{projectId}/plans/{planId}/relationships/{relationshipId}": {
      "delete": {
        "operationId": "deletePlanRelationship",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The Plan ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationshipsListDeleteRequest"
              }
            }
          },
          "description": "The Relationship body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Not Allowed"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Removes the specific Relationship from the Plan.",
        "tags": [
          "Plans"
        ]
      },
      "get": {
        "operationId": "getPlanRelationship",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The Plan ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Plan Relationships.",
        "tags": [
          "Plans"
        ]
      },
      "patch": {
        "operationId": "patchPlanRelationships",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The Plan ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsRequestBody"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Plan Relationships.",
        "tags": [
          "Plans"
        ]
      },
      "post": {
        "operationId": "postPlanRelationships",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "The Plan ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsRequestBody"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates the specific Relationships for the Plan.",
        "tags": [
          "Plans"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents": {
      "post": {
        "operationId": "postDocuments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/documentsListPostRequest"
              }
            }
          },
          "description": "The Document body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Documents.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}": {
      "get": {
        "operationId": "getDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Document.",
        "tags": [
          "Documents"
        ]
      },
      "patch": {
        "operationId": "patchDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowAction",
            "in": "query",
            "description": "The Workflow Action.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/documentsSinglePatchRequest"
              }
            }
          },
          "description": "The Document body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Document.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/actions/branch": {
      "post": {
        "operationId": "branchDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/branchDocumentRequestBody"
              }
            }
          },
          "description": "Branching parameters.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentsSinglePostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a Branch of the Document.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/actions/copy": {
      "post": {
        "operationId": "copyDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/copyDocumentRequestBody"
              }
            }
          },
          "description": "Copy Document parameters.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentsSinglePostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a copy of the Document.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/actions/mergeFromMaster": {
      "post": {
        "operationId": "mergeDocumentFromMaster",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Branch Document Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mergeDocumentRequestBody"
              }
            }
          },
          "description": "Merge Document parameters."
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Merges Master Work Item changes to the specified Branched Document.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/actions/mergeToMaster": {
      "post": {
        "operationId": "mergeDocumentToMaster",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Branch Document Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mergeDocumentRequestBody"
              }
            }
          },
          "description": "Merge Document parameters."
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Merges Work Item changes from specified Branched Document to Master.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/attachments": {
      "get": {
        "operationId": "getDocumentAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_attachmentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Document Attachments.",
        "tags": [
          "Document Attachments"
        ]
      },
      "post": {
        "description": "Files are identified by order or optionally by the 'lid' attribute. See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "postDocumentItemAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostDocumentAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_attachmentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Document Attachments.",
        "tags": [
          "Document Attachments"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/attachments/{attachmentId}": {
      "get": {
        "operationId": "getDocumentAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_attachmentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Document Attachment.",
        "tags": [
          "Document Attachments"
        ]
      },
      "patch": {
        "description": "See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "patchDocumentAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchDocumentAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data."
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Document Attachment.",
        "tags": [
          "Document Attachments"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "getDocumentAttachmentContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Downloads the file content for a specified Document Attachment.",
        "tags": [
          "Document Attachments"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/comments": {
      "get": {
        "operationId": "getDocumentComments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_commentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Document Comments.",
        "tags": [
          "Document Comments"
        ]
      },
      "post": {
        "operationId": "postDocumentComments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/document_commentsListPostRequest"
              }
            }
          },
          "description": "The Comment(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_commentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Document Comments.",
        "tags": [
          "Document Comments"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/comments/{commentId}": {
      "get": {
        "operationId": "getDocumentComment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The Comment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_commentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Document Comment.",
        "tags": [
          "Document Comments"
        ]
      },
      "patch": {
        "operationId": "patchDocumentComment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The Comment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/document_commentsSinglePatchRequest"
              }
            }
          },
          "description": "The Comment body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Document Comment.",
        "tags": [
          "Document Comments"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/fields/{fieldId}/actions/getAvailableOptions": {
      "get": {
        "operationId": "getAvailableEnumOptionsForDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The Field ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumOptionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of available options for the requested field in the specified Document.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/fields/{fieldId}/actions/getCurrentOptions": {
      "get": {
        "operationId": "getCurrentEnumerationOptionsForDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The Field ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumOptionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of selected options for the requested field in the specified Document.",
        "tags": [
          "Documents"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/parts": {
      "get": {
        "operationId": "getDocumentParts",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_partsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Document Parts.",
        "tags": [
          "Document Parts"
        ]
      },
      "post": {
        "operationId": "postDocumentParts",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/document_partsListPostRequest"
              }
            }
          },
          "description": "The Document Part(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_partsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Document Parts.",
        "tags": [
          "Document Parts"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/documents/{documentName}/parts/{partId}": {
      "get": {
        "operationId": "getDocumentPart",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentName",
            "in": "path",
            "description": "The Document name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partId",
            "in": "path",
            "description": "The Document Part ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_partsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Document Part.",
        "tags": [
          "Document Parts"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/pages/{pageName}": {
      "get": {
        "operationId": "getPage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageName",
            "in": "path",
            "description": "The Page name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pagesSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Page.",
        "tags": [
          "Pages"
        ]
      },
      "patch": {
        "operationId": "patchRichPage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageName",
            "in": "path",
            "description": "The Page name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pagesSinglePatchRequest"
              }
            }
          },
          "description": "The Page body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Page.",
        "tags": [
          "Pages"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/pages/{pageName}/attachments": {
      "post": {
        "description": "Files are identified by order or optionally by the 'lid' attribute. See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "postPageAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostPageAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_attachmentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Page Attachments.",
        "tags": [
          "Page Attachments"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/pages/{pageName}/attachments/{attachmentId}": {
      "get": {
        "operationId": "getPageAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageName",
            "in": "path",
            "description": "The Page name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/page_attachmentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Page Attachment.",
        "tags": [
          "Page Attachments"
        ]
      }
    },
    "/projects/{projectId}/spaces/{spaceId}/pages/{pageName}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "getPageAttachmentContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "spaceId",
            "in": "path",
            "description": "The Space ID. (Use '_default' without quotes to address the default Space.)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageName",
            "in": "path",
            "description": "The Page name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Downloads the file content for a specified Page Attachment.",
        "tags": [
          "Page Attachments"
        ]
      }
    },
    "/projects/{projectId}/testparameterdefinitions": {
      "delete": {
        "operationId": "deleteProjectTestParameterDefinitions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testparameter_definitionsListDeleteRequest"
              }
            }
          },
          "description": "The Test Parameter Definition(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Test Parameter Definitions for the specified Project.",
        "tags": [
          "Projects"
        ]
      },
      "get": {
        "operationId": "getProjectTestParameterDefinitions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Parameter Definitions for the specified Project.",
        "tags": [
          "Projects"
        ]
      },
      "post": {
        "operationId": "postProjectTestParameterDefinitions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testparameter_definitionsListPostRequest"
              }
            }
          },
          "description": "The Test Parameter Definition(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Parameter Definitions for the specified Project.",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/{projectId}/testparameterdefinitions/{testParamId}": {
      "delete": {
        "operationId": "deleteProjectTestParameterDefinition",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Parameter Definition for the specified Project.",
        "tags": [
          "Projects"
        ]
      },
      "get": {
        "operationId": "getProjectTestParameterDefinition",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Parameter Definition for the specified Project.",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/{projectId}/testruns": {
      "delete": {
        "operationId": "deleteTestRuns",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrunsListDeleteRequest"
              }
            }
          },
          "description": "The Test Run(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Test Runs.",
        "tags": [
          "Test Runs"
        ]
      },
      "get": {
        "operationId": "getTestRuns",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templates",
            "in": "query",
            "description": "If set to true, only templates will be returned, otherwise only actual instances will be returned.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrunsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Runs.",
        "tags": [
          "Test Runs"
        ]
      },
      "patch": {
        "operationId": "patchTestRuns",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrunsListPatchRequest"
              }
            }
          },
          "description": "The Test Run(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Test Runs.",
        "tags": [
          "Test Runs"
        ]
      },
      "post": {
        "operationId": "postTestRuns",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrunsListPostRequest"
              }
            }
          },
          "description": "The Test Run(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrunsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Runs.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}": {
      "delete": {
        "operationId": "deleteTestRun",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      },
      "get": {
        "operationId": "getTestRun",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrunsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      },
      "patch": {
        "operationId": "patchTestRun",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrunsSinglePatchRequest"
              }
            }
          },
          "description": "The Test Run(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/actions/exportTestsToExcel": {
      "get": {
        "operationId": "getExportExcelTests",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The property to sort the test results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "template",
            "in": "query",
            "description": "The export template string.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Exports tests to Excel.",
        "tags": [
          "Test Runs"
        ]
      },
      "post": {
        "deprecated": true,
        "operationId": "exportExcelTests",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/exportTestCasesRequestBody"
              }
            }
          },
          "description": "Exports tests to Excel body."
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Exports tests to Excel.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/actions/getWorkflowActions": {
      "get": {
        "operationId": "getWorkflowActionsForTestRun",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowActionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Workflow Actions.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/actions/importExcelTestResults": {
      "post": {
        "operationId": "importExcelTestResults",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostImportActionRequestBody"
              }
            }
          },
          "description": "Excel import meta data and file data.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Imports Excel test results.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/actions/importXUnitTestResults": {
      "post": {
        "operationId": "importXUnitTestResults",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "XUnit File.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Imports XUnit test results.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/attachments": {
      "delete": {
        "operationId": "deleteTestRunAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrun_attachmentsListDeleteRequest"
              }
            }
          },
          "description": "The Test Run Attachment(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Test Run Attachments.",
        "tags": [
          "Test Run Attachments"
        ]
      },
      "get": {
        "operationId": "getTestRunAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrun_attachmentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Run Attachments.",
        "tags": [
          "Test Run Attachments"
        ]
      },
      "post": {
        "description": "Files are identified by order or optionally by the 'lid' attribute. See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "postTestRunAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostTestRunAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrun_attachmentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Run Attachments.",
        "tags": [
          "Test Run Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/attachments/{attachmentId}": {
      "delete": {
        "operationId": "deleteTestRunAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Run Attachment.",
        "tags": [
          "Test Run Attachments"
        ]
      },
      "get": {
        "operationId": "getTestRunAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrun_attachmentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Run Attachment.",
        "tags": [
          "Test Run Attachments"
        ]
      },
      "patch": {
        "description": "See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "patchTestRunAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchTestRunAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data."
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Run Attachment.",
        "tags": [
          "Test Run Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "getTestRunAttachmentContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Downloads the file content for a specified Test Run Attachment.",
        "tags": [
          "Test Run Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/comments": {
      "get": {
        "operationId": "getTestRunComments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrun_commentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Run Comments.",
        "tags": [
          "Test Run Comments"
        ]
      },
      "patch": {
        "operationId": "patchTestRunComments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrun_commentsListPatchRequest"
              }
            }
          },
          "description": "The Comment body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Test Run Comments.",
        "tags": [
          "Test Run Comments"
        ]
      },
      "post": {
        "operationId": "postTestRunComments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrun_commentsListPostRequest"
              }
            }
          },
          "description": "The Comment(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrun_commentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Run Comments.",
        "tags": [
          "Test Run Comments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/comments/{commentId}": {
      "get": {
        "operationId": "getTestRunComment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The Comment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrun_commentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Run Comment.",
        "tags": [
          "Test Run Comments"
        ]
      },
      "patch": {
        "operationId": "patchTestRunComment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The Comment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrun_commentsSinglePatchRequest"
              }
            }
          },
          "description": "The Comment body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Run Comment.",
        "tags": [
          "Test Run Comments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testparameterdefinitions": {
      "get": {
        "operationId": "getTestRunTestParameterDefinitions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Parameter Definitions for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      },
      "post": {
        "operationId": "postTestRunParameterDefinitions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testparameter_definitionsListPostRequest"
              }
            }
          },
          "description": "The Test Parameter Definition(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Parameter Definitions for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testparameterdefinitions/{testParamId}": {
      "delete": {
        "operationId": "deleteTestRunTestParameterDefinition",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Parameter Definition for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      },
      "get": {
        "operationId": "getTestRunTestParameterDefinition",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Parameter Definition for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testparameters": {
      "delete": {
        "operationId": "deleteTestRunTestParameters",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testparametersListDeleteRequest"
              }
            }
          },
          "description": "The Test Parameter(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Test Parameters for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      },
      "get": {
        "operationId": "getTestRunTestParameters",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparametersListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Parameters for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      },
      "post": {
        "operationId": "postTestRunTestParameters",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testparametersListPostRequest"
              }
            }
          },
          "description": "The Test Parameter(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparametersListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Parameters for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testparameters/{testParamId}": {
      "delete": {
        "operationId": "deleteTestRunTestParameter",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Parameter for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      },
      "get": {
        "operationId": "getTestRunTestParameter",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparametersSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Parameter for the specified Test Run.",
        "tags": [
          "Test Runs"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords": {
      "get": {
        "operationId": "getTestRecords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "query",
            "description": "testCaseProjectId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "query",
            "description": "testCaseId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testResultId",
            "in": "query",
            "description": "testResultId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrecordsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Records.",
        "tags": [
          "Test Records"
        ]
      },
      "patch": {
        "operationId": "patchTestRecords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrecordsListPatchRequest"
              }
            }
          },
          "description": "The Test Record(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Test Records.",
        "tags": [
          "Test Records"
        ]
      },
      "post": {
        "operationId": "postTestRecords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrecordsListPostRequest"
              }
            }
          },
          "description": "The Test Record(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrecordsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Records.",
        "tags": [
          "Test Records"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}": {
      "delete": {
        "operationId": "deleteTestRecord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Record.",
        "tags": [
          "Test Records"
        ]
      },
      "get": {
        "operationId": "getTestRecord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrecordsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Record.",
        "tags": [
          "Test Records"
        ]
      },
      "patch": {
        "operationId": "patchTestRecord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrecordsSinglePatchRequest"
              }
            }
          },
          "description": "The Test Record(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Record.",
        "tags": [
          "Test Records"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/attachments": {
      "delete": {
        "operationId": "deleteTestRecordAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testrecord_attachmentsListDeleteRequest"
              }
            }
          },
          "description": "The Test Record Attachment(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Test Record Attachments.",
        "tags": [
          "Test Record Attachments"
        ]
      },
      "get": {
        "operationId": "getTestRecordAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrecord_attachmentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Record Attachments.",
        "tags": [
          "Test Record Attachments"
        ]
      },
      "post": {
        "description": "Files are identified by order or optionally by the 'lid' attribute. See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "postTestRecordAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostTestRecordAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrecord_attachmentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Record Attachments.",
        "tags": [
          "Test Record Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/attachments/{attachmentId}": {
      "delete": {
        "operationId": "deleteTestRecordAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Record Attachment.",
        "tags": [
          "Test Record Attachments"
        ]
      },
      "get": {
        "operationId": "getTestRecordAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testrecord_attachmentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Record Attachment.",
        "tags": [
          "Test Record Attachments"
        ]
      },
      "patch": {
        "description": "See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "patchTestRecordAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchTestRecordAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data."
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Record Attachment.",
        "tags": [
          "Test Record Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "getTestRecordAttachmentContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Downloads the file content for a specified Test Record Attachment.",
        "tags": [
          "Test Record Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/testparameters": {
      "get": {
        "operationId": "getTestRecordTestParameters",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparametersListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Parameters for the specified Test Record.",
        "tags": [
          "Test Records"
        ]
      },
      "post": {
        "operationId": "postTestRecordTestParameters",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/testparametersListPostRequest"
              }
            }
          },
          "description": "The Test Parameter(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparametersListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Parameters for the specified Test Record.",
        "tags": [
          "Test Records"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/testparameters/{testParamId}": {
      "delete": {
        "operationId": "deleteTestRecordTestParameter",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Parameter for the specified Test Record.",
        "tags": [
          "Test Records"
        ]
      },
      "get": {
        "operationId": "getTestRecordTestParameter",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparametersSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Parameter for the specified Test Record.",
        "tags": [
          "Test Records"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/teststepresults": {
      "get": {
        "operationId": "getTestStepResults",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststep_resultsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Step Results.",
        "tags": [
          "Test Step Results"
        ]
      },
      "patch": {
        "operationId": "patchTestStepResults",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststep_resultsListPatchRequest"
              }
            }
          },
          "description": "The Test Step(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Test Step Results.",
        "tags": [
          "Test Step Results"
        ]
      },
      "post": {
        "operationId": "postTestStepResults",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststep_resultsListPostRequest"
              }
            }
          },
          "description": "The Test Step Result(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststep_resultsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Step Results.",
        "tags": [
          "Test Step Results"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/teststepresults/{testStepIndex}": {
      "get": {
        "operationId": "getTestStepResult",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststep_resultsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Step Result.",
        "tags": [
          "Test Step Results"
        ]
      },
      "patch": {
        "operationId": "patchTestStepResult",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststep_resultsSinglePatchRequest"
              }
            }
          },
          "description": "The Test Step(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Step Result.",
        "tags": [
          "Test Step Results"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/teststepresults/{testStepIndex}/attachments": {
      "delete": {
        "operationId": "deleteTestStepResultAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststepresult_attachmentsListDeleteRequest"
              }
            }
          },
          "description": "The Test Step Result Attachment(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Test Step Result Attachments.",
        "tags": [
          "Test Step Result Attachments"
        ]
      },
      "get": {
        "operationId": "getTestStepResultAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststepresult_attachmentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Attachments for the specified Test Step Result.",
        "tags": [
          "Test Step Result Attachments"
        ]
      },
      "post": {
        "description": "Files are identified by order or optionally by the 'lid' attribute. See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "postTestStepResultAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostTestStepResultAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststepresult_attachmentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Step Result Attachments.",
        "tags": [
          "Test Step Result Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/teststepresults/{testStepIndex}/attachments/{attachmentId}": {
      "delete": {
        "operationId": "deleteTestStepResultAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Step Result Attachment.",
        "tags": [
          "Test Step Result Attachments"
        ]
      },
      "get": {
        "operationId": "getTestStepResultAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststepresult_attachmentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Step Result Attachment for the specified Test Record.",
        "tags": [
          "Test Step Result Attachments"
        ]
      },
      "patch": {
        "description": "See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "patchTestStepResultAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchTestStepResultAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data."
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Step Result Attachment.",
        "tags": [
          "Test Step Result Attachments"
        ]
      }
    },
    "/projects/{projectId}/testruns/{testRunId}/testrecords/{testCaseProjectId}/{testCaseId}/{iteration}/teststepresults/{testStepIndex}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "getTestStepResultAttachmentContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "The Test Run ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseProjectId",
            "in": "path",
            "description": "The Testcase Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCaseId",
            "in": "path",
            "description": "The Testcase ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iteration",
            "in": "path",
            "description": "The Iteration Number.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Downloads the file content for a specified Test Step Result Attachment for the specified Test Record.",
        "tags": [
          "Test Step Result Attachments"
        ]
      }
    },
    "/projects/{projectId}/workitems": {
      "delete": {
        "operationId": "deleteWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitemsListDeleteRequest"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Work Items.",
        "tags": [
          "Work Items"
        ]
      },
      "get": {
        "operationId": "getWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitemsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Work Items.",
        "tags": [
          "Work Items"
        ]
      },
      "patch": {
        "operationId": "patchWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowAction",
            "in": "query",
            "description": "The Workflow Action.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changeTypeTo",
            "in": "query",
            "description": "The Type the Workitem to change to.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitemsListPatchRequest"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Work Items.",
        "tags": [
          "Work Items"
        ]
      },
      "post": {
        "operationId": "postWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitemsListPostRequest"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitemsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Work Items.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}": {
      "get": {
        "operationId": "getWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitemsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Work Item.",
        "tags": [
          "Work Items"
        ]
      },
      "patch": {
        "operationId": "patchWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowAction",
            "in": "query",
            "description": "The Workflow Action.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changeTypeTo",
            "in": "query",
            "description": "The Type the Workitem to change to.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitemsSinglePatchRequest"
              }
            }
          },
          "description": "The Work Item body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Work Item.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/actions/getWorkflowActions": {
      "get": {
        "operationId": "getWorkflowActionsForWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowActionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Workflow Actions.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/actions/moveFromDocument": {
      "post": {
        "operationId": "moveFromDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Moves the specified Work Item from the Document.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/actions/moveToDocument": {
      "post": {
        "operationId": "moveToDocument",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/moveWorkItemToDocumentRequestBody"
              }
            }
          },
          "description": "Moving Work Item to Document parameters.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Moves the specified Work Item to the Document.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/approvals": {
      "delete": {
        "operationId": "deleteApprovals",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitem_approvalsListDeleteRequest"
              }
            }
          },
          "description": "The Workitem Approval(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Work Item Approvals.",
        "tags": [
          "Work Item Approvals"
        ]
      },
      "get": {
        "operationId": "getWorkItemApprovals",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_approvalsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of instances.",
        "tags": [
          "Work Item Approvals"
        ]
      },
      "patch": {
        "operationId": "patchWorkItemApprovals",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitem_approvalsListPatchRequest"
              }
            }
          },
          "description": "The Test Run(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of instances.",
        "tags": [
          "Work Item Approvals"
        ]
      },
      "post": {
        "operationId": "postWorkItemApprovals",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitem_approvalsListPostRequest"
              }
            }
          },
          "description": "The Linked Work Item(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_approvalsListPostResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of WorkItem Approvals.",
        "tags": [
          "Work Item Approvals"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/approvals/{userId}": {
      "delete": {
        "operationId": "deleteApproval",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Work Item Approval.",
        "tags": [
          "Work Item Approvals"
        ]
      },
      "get": {
        "operationId": "getWorkItemApproval",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_approvalsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified instance.",
        "tags": [
          "Work Item Approvals"
        ]
      },
      "patch": {
        "operationId": "patchWorkItemApproval",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitem_approvalsSinglePatchRequest"
              }
            }
          },
          "description": "The Test Run(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified instance.",
        "tags": [
          "Work Item Approvals"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/attachments": {
      "get": {
        "operationId": "getWorkItemAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_attachmentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of  Work Item Attachments.",
        "tags": [
          "Work Item Attachments"
        ]
      },
      "post": {
        "description": "Files are identified by order or optionally by the 'lid' attribute. See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "postWorkItemAttachments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PostWorkItemAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_attachmentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Work Item Attachments.",
        "tags": [
          "Work Item Attachments"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/attachments/{attachmentId}": {
      "delete": {
        "operationId": "deleteWorkItemAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Work Item Attachment.",
        "tags": [
          "Work Item Attachments"
        ]
      },
      "get": {
        "operationId": "getWorkItemAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_attachmentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Work Item Attachment.",
        "tags": [
          "Work Item Attachments"
        ]
      },
      "patch": {
        "description": "See more in the <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a>.",
        "operationId": "patchWorkItemAttachment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchWorkItemAttachmentsRequestBody"
              }
            }
          },
          "description": "Attachment meta data and file data."
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Work Item Attachment.",
        "tags": [
          "Work Item Attachments"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/attachments/{attachmentId}/content": {
      "get": {
        "operationId": "getWorkItemAttachmentContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "The Attachment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Downloads the file content for a specified Work Item Attachment.",
        "tags": [
          "Work Item Attachments"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/comments": {
      "get": {
        "operationId": "getComments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_commentsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Work Item Comments.",
        "tags": [
          "Work Item Comments"
        ]
      },
      "post": {
        "operationId": "postComments",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitem_commentsListPostRequest"
              }
            }
          },
          "description": "The Comment(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_commentsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Work Item Comments.",
        "tags": [
          "Work Item Comments"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/comments/{commentId}": {
      "get": {
        "operationId": "getComment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The Comment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workitem_commentsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Work Item Comment.",
        "tags": [
          "Work Item Comments"
        ]
      },
      "patch": {
        "operationId": "patchComment",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "The Comment ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workitem_commentsSinglePatchRequest"
              }
            }
          },
          "description": "The Comment body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Work Item Comment.",
        "tags": [
          "Work Item Comments"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/externallylinkedworkitems": {
      "delete": {
        "operationId": "deleteExternallyLinkedWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/externallylinkedworkitemsListDeleteRequest"
              }
            }
          },
          "description": "The Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Externally Linked Work Items.",
        "tags": [
          "Externally Linked Work Items"
        ]
      },
      "get": {
        "description": "Returns the external links to other Work Items. (The same as the corresponding Java API method.)",
        "operationId": "getExternallyLinkedWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/externallylinkedworkitemsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Externally Linked Work Items.",
        "tags": [
          "Externally Linked Work Items"
        ]
      },
      "post": {
        "operationId": "postExternallyLinkedWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/externallylinkedworkitemsListPostRequest"
              }
            }
          },
          "description": "The Externally Linked Work Item(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/externallylinkedworkitemsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Externally Linked Work Items.",
        "tags": [
          "Externally Linked Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/externallylinkedworkitems/{roleId}/{hostname}/{targetProjectId}/{linkedWorkItemId}": {
      "delete": {
        "operationId": "deleteExternallyLinkedWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The Role ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostname",
            "in": "path",
            "description": "The Target Hostname.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetProjectId",
            "in": "path",
            "description": "The Target Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedWorkItemId",
            "in": "path",
            "description": "The Linked Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Externally Linked Work Item.",
        "tags": [
          "Externally Linked Work Items"
        ]
      },
      "get": {
        "description": "Returns the external links to other Work Items. (The same as the corresponding Java API method.)",
        "operationId": "getExternallyLinkedWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The Role ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hostname",
            "in": "path",
            "description": "The Target Hostname.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetProjectId",
            "in": "path",
            "description": "The Target Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedWorkItemId",
            "in": "path",
            "description": "The Linked Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/externallylinkedworkitemsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Externally Linked Work Item.",
        "tags": [
          "Externally Linked Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/featureselections": {
      "get": {
        "operationId": "getFeatureSelections",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureselectionsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Feature Selections.",
        "tags": [
          "Feature Selections"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/featureselections/{selectionTypeId}/{targetProjectId}/{targetWorkItemId}": {
      "get": {
        "operationId": "getFeatureSelection",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selectionTypeId",
            "in": "path",
            "description": "The Selection Type ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetProjectId",
            "in": "path",
            "description": "The Target Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetWorkItemId",
            "in": "path",
            "description": "The Target Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureselectionsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Feature Selection.",
        "tags": [
          "Feature Selections"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/fields/{fieldId}/actions/getAvailableOptions": {
      "get": {
        "operationId": "getAvailableEnumOptionsForWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The Field ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumOptionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of available options for the requested field for the specified Work Item.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/fields/{fieldId}/actions/getCurrentOptions": {
      "get": {
        "operationId": "getCurrentEnumOptionsForWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The Field ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumOptionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of selected options for the requested field for specific Work Item.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/linkedoslcresources": {
      "delete": {
        "operationId": "deleteOslcResources",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/linkedoslcresourcesListDeleteRequest"
              }
            }
          },
          "description": "The Linked Oslc Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of instances.",
        "tags": [
          "Linked Oslc Resources"
        ]
      },
      "get": {
        "operationId": "getOslcResources",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/linkedoslcresourcesListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of instances.",
        "tags": [
          "Linked Oslc Resources"
        ]
      },
      "post": {
        "operationId": "postOslcResources",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/linkedoslcresourcesListPostRequest"
              }
            }
          },
          "description": "The Linked Oslc Item(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/linkedoslcresourcesListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of instances.",
        "tags": [
          "Linked Oslc Resources"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/linkedworkitems": {
      "delete": {
        "description": "Deletes the direct outgoing links to other Work Items. (The same as the corresponding Java API method.)  Does not pertain to external links or backlinks.",
        "operationId": "deleteLinkedWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/linkedworkitemsListDeleteRequest"
              }
            }
          },
          "description": "The Linked Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Linked Work Items.",
        "tags": [
          "Linked Work Items"
        ]
      },
      "get": {
        "description": "Returns the direct outgoing links to other Work Items. (The same as the corresponding Java API method.)  Does not pertain to external links or backlinks.",
        "operationId": "getLinkedWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/linkedworkitemsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Linked Work Items.",
        "tags": [
          "Linked Work Items"
        ]
      },
      "post": {
        "description": "Creates the direct outgoing links to other Work Items. (The same as the corresponding Java API method.)  Does not pertain to external links or backlinks.",
        "operationId": "postLinkedWorkItems",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/linkedworkitemsListPostRequest"
              }
            }
          },
          "description": "The Linked Work Item(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/linkedworkitemsListPostResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Linked Work Items.",
        "tags": [
          "Linked Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/linkedworkitems/{roleId}/{targetProjectId}/{linkedWorkItemId}": {
      "delete": {
        "description": "Deletes the direct outgoing links to other Work Items. (The same as the corresponding Java API method.)  Does not pertain to external links or backlinks.",
        "operationId": "deleteLinkedWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The Role ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetProjectId",
            "in": "path",
            "description": "The Target Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedWorkItemId",
            "in": "path",
            "description": "The Linked Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Linked Work Item.",
        "tags": [
          "Linked Work Items"
        ]
      },
      "get": {
        "description": "Returns the direct outgoing links to other Work Items. (The same as the corresponding Java API method.)  Does not pertain to external links or backlinks.",
        "operationId": "getLinkedWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The Role ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetProjectId",
            "in": "path",
            "description": "The Target Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedWorkItemId",
            "in": "path",
            "description": "The Linked Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/linkedworkitemsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Linked Work Item.",
        "tags": [
          "Linked Work Items"
        ]
      },
      "patch": {
        "description": "Updates the direct outgoing links to other Work Items. (The same as the corresponding Java API method.)  Does not pertain to external links or backlinks.",
        "operationId": "patchLinkedWorkItem",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The Role ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetProjectId",
            "in": "path",
            "description": "The Target Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedWorkItemId",
            "in": "path",
            "description": "The Linked Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/linkedworkitemsSinglePatchRequest"
              }
            }
          },
          "description": "The Linked Work Item(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Linked Work Item.",
        "tags": [
          "Linked Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/relationships/{relationshipId}": {
      "delete": {
        "operationId": "deleteWorkItemsRelationship",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationshipsListDeleteRequest"
              }
            }
          },
          "description": "The Relationship body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Not Allowed"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Work Item Relationships.",
        "tags": [
          "Work Items"
        ]
      },
      "get": {
        "operationId": "getWorkItemsRelationships",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationshipResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Work Item Relationships.",
        "tags": [
          "Work Items"
        ]
      },
      "patch": {
        "operationId": "patchWorkItemRelationships",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsRequestBody"
              }
            }
          },
          "description": "The Relationship body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Work Item Relationships.",
        "tags": [
          "Work Items"
        ]
      },
      "post": {
        "operationId": "postWorkItemRelationships",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationshipId",
            "in": "path",
            "description": "The Relationship ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipsRequestBody"
              }
            }
          },
          "description": "The Relationship body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Work Item Relationships.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/testparameterdefinitions": {
      "get": {
        "operationId": "getWorkItemTestParameterDefinitions",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Parameter Definitions for the specified Work Item.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/testparameterdefinitions/{testParamId}": {
      "get": {
        "operationId": "getWorkItemTestParameterDefinition",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testParamId",
            "in": "path",
            "description": "The Test Parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/testparameter_definitionsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Parameter Definition for the specified Work Item.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/teststeps": {
      "delete": {
        "operationId": "deleteTestSteps",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststepsListDeleteRequest"
              }
            }
          },
          "description": "The Test Step(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Test Steps.",
        "tags": [
          "Test Steps"
        ]
      },
      "get": {
        "operationId": "getTestSteps",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststepsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Test Steps.",
        "tags": [
          "Test Steps"
        ]
      },
      "patch": {
        "operationId": "patchTestSteps",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststepsListPatchRequest"
              }
            }
          },
          "description": "The Test Step(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates a list of Test Steps.",
        "tags": [
          "Test Steps"
        ]
      },
      "post": {
        "operationId": "postTestSteps",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststepsListPostRequest"
              }
            }
          },
          "description": "The Test Step(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststepsListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Test Steps.",
        "tags": [
          "Test Steps"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/teststeps/{testStepIndex}": {
      "delete": {
        "operationId": "deleteTestStep",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Test Step.",
        "tags": [
          "Test Steps"
        ]
      },
      "get": {
        "operationId": "getTestStep",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/teststepsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Test Step.",
        "tags": [
          "Test Steps"
        ]
      },
      "patch": {
        "operationId": "patchTestStep",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testStepIndex",
            "in": "path",
            "description": "The Test Step index.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/teststepsSinglePatchRequest"
              }
            }
          },
          "description": "The Test Step(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified Test Step.",
        "tags": [
          "Test Steps"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/workrecords": {
      "delete": {
        "operationId": "deleteWorkRecords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workrecordsListDeleteRequest"
              }
            }
          },
          "description": "The Work Record(s) body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes a list of Work Records.",
        "tags": [
          "Work Item Work Records"
        ]
      },
      "get": {
        "operationId": "getWorkRecords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workrecordsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of instances.",
        "tags": [
          "Work Item Work Records"
        ]
      },
      "post": {
        "operationId": "postWorkRecords",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workrecordsListPostRequest"
              }
            }
          },
          "description": "The Linked Work Item(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workrecordsListPostResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Work Records.",
        "tags": [
          "Work Item Work Records"
        ]
      }
    },
    "/projects/{projectId}/workitems/{workItemId}/workrecords/{workRecordId}": {
      "delete": {
        "operationId": "deleteWorkRecord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workRecordId",
            "in": "path",
            "description": "The Work Record ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Deletes the specified Work Record.",
        "tags": [
          "Work Item Work Records"
        ]
      },
      "get": {
        "operationId": "getWorkRecord",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "The Work Item ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workRecordId",
            "in": "path",
            "description": "The Work Record ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workrecordsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified instance.",
        "tags": [
          "Work Item Work Records"
        ]
      }
    },
    "/projects/{projectId}/workitems/fields/{fieldId}/actions/getAvailableOptions": {
      "get": {
        "operationId": "getAvailableEnumOptionsForWorkItemType",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The Project ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The Field ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The Type of the object.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enumOptionsActionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of available options for the requested field for the specified Work Item Type.",
        "tags": [
          "Work Items"
        ]
      }
    },
    "/projects/actions/createProject": {
      "post": {
        "operationId": "createProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createProjectRequestBody"
              }
            }
          },
          "description": "Create project parameters.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a new Project",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projects/actions/markProject": {
      "post": {
        "operationId": "markProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createProjectRequestBody"
              }
            }
          },
          "description": "Create project parameters.",
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobsSinglePostResponse"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Marks the Project.",
        "tags": [
          "Projects"
        ]
      }
    },
    "/projecttemplates": {
      "get": {
        "operationId": "getProjectTemplates",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projecttemplatesListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Project Templates.",
        "tags": [
          "Project Templates"
        ]
      }
    },
    "/revisions": {
      "get": {
        "operationId": "getRevisions",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/revisionsListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of instances.",
        "tags": [
          "Revisions"
        ]
      }
    },
    "/revisions/{repositoryName}/{revision}": {
      "get": {
        "operationId": "getRevision",
        "parameters": [
          {
            "name": "repositoryName",
            "in": "path",
            "description": "The Repository Name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "path",
            "description": "The revision ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/revisionsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified instance.",
        "tags": [
          "Revisions"
        ]
      }
    },
    "/roles/{roleId}": {
      "get": {
        "operationId": "getRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The Role ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/globalrolesSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified Global Role.",
        "tags": [
          "Roles"
        ]
      }
    },
    "/usergroups/{groupId}": {
      "get": {
        "operationId": "getUserGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The Group ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usergroupsSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified User Group.",
        "tags": [
          "User Groups"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "page[size]",
            "in": "query",
            "description": "Limit the number of entities returned in a single response. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page[number]",
            "in": "query",
            "description": "Specify the page number to be returned. Counting starts from 1. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "description": "The query string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usersListGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns a list of Users.",
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "postUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usersListPostRequest"
              }
            }
          },
          "description": "The User(s) body.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usersListPostResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Creates a list of Users.",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter returned resource fields. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "style": "deepObject",
            "schema": {
              "$ref": "#/components/schemas/sparseFields"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Include related entities. See <a href=\"https://docs.sw.siemens.com/en-US/doc/230235217/PL20240424963191224.polarion_help_sc.xid2134849/xid2134871\" target=\"_blank\">REST API User Guide</a> for details.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "query",
            "description": "The revision ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usersSingleGetResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified User.",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "patchUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usersSinglePatchRequest"
              }
            }
          },
          "description": "The User body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified User.",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/actions/getAvatar": {
      "get": {
        "operationId": "getAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Returns the specified User Avatar.",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/actions/setLicense": {
      "post": {
        "operationId": "setLicense",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/setLicenseRequestBody"
              }
            }
          },
          "description": "The user license body.",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Sets the User's license.",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/actions/updateAvatar": {
      "post": {
        "operationId": "updateAvatar",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The User ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/updateAvatarRequestBody"
              }
            }
          },
          "description": "Avatar file data."
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Request Entity Too Large"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "4XX-5XX": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            },
            "description": "Error responses have the following structure:"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "summary": "Updates the specified User Avatar.",
        "tags": [
          "Users"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://example.com/polarion/rest/v1"
    }
  ]
}
